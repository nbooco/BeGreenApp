%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.2%%For: (Eleonora Kolotseva) ()%%Title: (Book_1.eps)%%CreationDate: 5/7/09 6:21 PM%%BoundingBox: 683 -445 1917 789%%HiResBoundingBox: 683.0771 -444.9307 1916.0098 788.0015%%DocumentProcessColors: Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0 0.47451 0.878431 0 (C=0 M=47 Y=88 K=0)%%+ 0 0.917647 1 0 (C=0 M=92 Y=100 K=0)%%+ 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 0 0 612 792%AI3_DocumentPreview: Header%AI5_ArtSize: 612 792%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -59 953 0.6667 1586 1173 18 0 0 1447 -280 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (Unnamed gradient 2)(Unnamed gradient 2) 0 2 Bd[0<EAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79><FFFFFEFEFEFEFDFDFDFDFCFCFCFBFBFBFBFAFAFAF9F9F9F9F8F8F8F8F7F7F7F6F6F6F6F5F5F5F4F4F4F4F3F3F3F3F2F2F2F1F1F1F1F0F0F0EFEFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E7E6E6E6E6E5E5E5E4E4E4E4E3E3E3E2E2E2E2E1E1E1E1E0E0>01 %_Br[0 0.47451 0.878431 0 1 50 100 %_BS%_0 0.47451 0.878431 0 (C=0 M=47 Y=88 K=0) 0 0 5 50 100 Bs0 0.917647 1 0 1 50 0 %_BS%_0 0.917647 1 0 (C=0 M=92 Y=100 K=0) 0 0 5 50 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 0.917647 1 0 (C=0 M=92 Y=100 K=0) 0 0 Xk(C=0 M=92 Y=100 K=0)Pc0 0.47451 0.878431 0 (C=0 M=47 Y=88 K=0) 0 0 Xk(C=0 M=47 Y=88 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0 J 0 j 1 w 4 M []0 d0 XR1314.8447 497.189 m1314.8447 667.8262 L1438.0566 667.8262 L1441.0586 667.9048 L1453.7266 667.9048 1463.9873 657.6421 1463.9873 644.98 C1464.0898 642.5391 L1464.0898 467.9155 L1464.0498 465.6899 L1464.0498 453.0283 1453.7881 442.7656 1441.1201 442.7656 C1437.9385 442.8813 L1286.7734 442.8813 L1150.2344 492.4448 L1148.9199 493.02 L1139.7725 496.0078 1133.125 504.5254 1133.125 514.665 C1133.1553 515.4727 L1133.1553 691.5654 L1133.2656 691.5225 L1133.2598 691.7021 1133.2383 691.8755 1133.2383 692.0552 c1133.2383 704.7168 1143.5059 714.9814 1156.1602 714.9814 C1160.6846 714.9814 L1162.6855 725.605 1171.9971 733.6479 1183.1963 733.6479 C1185.4121 733.6709 L1206.4844 733.7007 L1258.4912 738.5576 1286.0352 688.2861 V1286.0723 646.5088 L1286.0352 646.5244 L1286.0352 482.9697 L1258.4912 533.2432 1206.4844 528.3853 Y1183.8125 528.3853 L1183.1348 528.4219 L1170.4814 528.4219 1160.2148 538.6855 1160.2148 551.3447 C1160.2266 552.1094 L1160.1953 688.3931 1160.1953 688.7104 v1160.1953 692.3193 1157.2686 695.2441 1153.6592 695.2441 c1150.2344 695.2441 1147.4512 692.5957 1147.1807 689.2363 C1147.166 689.2427 1147.1475 689.2461 1147.1289 689.2544 C1147.1289 516.2661 L1147.1523 514.9204 L1147.1523 512.0957 1148.9473 509.8433 1151.5449 508.9722 C1152.9355 508.4653 L1285.4912 459.8472 L1285.8652 459.8472 L1285.8652 459.5493 L1441.6006 459.5493 L1441.6006 459.5918 L1445.1572 459.5996 1448.0371 462.4814 1448.0371 466.0391 c1448.0371 469.5967 1445.1572 472.478 1441.6006 472.4863 C1441.6006 472.5171 L1339.9316 472.5171 L1337.8086 472.4971 l1325.1543 472.4971 1314.8984 482.7534 1314.8984 495.4043 c1314.8447 497.189 LBb1 (Unnamed gradient 2) 1298.6074 372.9141 90 441.2769 1 0 0 1 0 0 Bg-0.000019 441.2769 334.9648 0.000015 1131.125 372.9141 Xm-0.000399 9116.7559 334.9648 0.000015 1131.125 -8743.8418 Bc-0.000019 441.2769 334.9648 0.000015 1131.125 372.9141 Bm-0.000399 9116.7559 334.9648 0.000015 1131.125 814.1909 Bcf0 BBu1352.4805 -22.9434 m1349.1885 -21.3223 1347.8398 -17.3418 1349.4609 -14.0518 C1349.4609 -14.0518 L1356.4854 0.204102 1370.5762 10.335 1387.1934 11.7959 C1387.1934 11.7959 L1387.1934 11.7959 L1388.8848 11.9531 1390.7744 11.9824 1391.2969 12 C1391.2969 12 L1391.3008 12 1435.6729 12 1469.8789 11.9961 C1469.8789 11.9961 L1473.5469 11.9961 1476.5195 9.02344 1476.5195 5.35645 C1476.5195 5.35645 L1476.5195 1.68945 1473.5469 -1.2832 1469.8789 -1.2832 C1469.8789 -1.2832 L1436.499 -1.2832 1393.4453 -1.2832 1391.374 -1.28027 C1391.374 -1.28027 L1391.3076 -1.2832 1391.2051 -1.28613 1391.082 -1.28906 C1391.082 -1.28906 L1390.8369 -1.30078 1390.4922 -1.30957 1390.1328 -1.32617 C1390.1328 -1.32617 L1389.4531 -1.34961 1388.5566 -1.40527 1388.5566 -1.41113 C1388.5566 -1.41113 L1388.4521 -1.42578 L1388.3477 -1.43066 L1376.4922 -2.46875 1366.4004 -9.72559 1361.3711 -19.9248 C1361.3711 -19.9248 L1361.375 -19.9248 L1360.2168 -22.2695 1357.8633 -23.6299 1355.4131 -23.6299 C1355.4131 -23.6299 L1354.4277 -23.6299 1353.4268 -23.4092 1352.4805 -22.9434 C1352.4805 -22.9434 LBb1 (Unnamed gradient 2) 1412.6465 -357.0469 90 560.8143 1 0 0 1 0 0 Bg-0.000025 560.8143 132.6797 0.000006 1345.8398 -357.0469 Xm-0.000392 8967.2295 132.6797 0.000006 1345.8398 -9324.2773 Bc-0.000025 560.8143 132.6797 0.000006 1345.8398 -357.0469 Bm-0.000392 8967.2295 132.6797 0.000006 1345.8398 203.7676 Bcf0 BB1352.4502 -58.8301 m1349.1729 -57.1875 1347.8467 -53.1943 1349.4893 -49.9199 C1349.4893 -49.9199 L1356.6162 -35.666 1371.041 -26.2861 1387.8574 -24.792 C1387.8574 -24.792 L1389.207 -24.6787 1390.9678 -24.626 1391.8115 -24.6152 C1391.8115 -24.6152 L1391.8789 -24.6123 1391.9492 -24.6123 1392.0098 -24.6152 C1392.0098 -24.6152 L1394.4229 -24.6152 1429.042 -24.6299 1459.9658 -24.6377 C1459.9658 -24.6377 L1459.9688 -24.6377 L1463.6328 -24.6377 1466.6045 -27.6143 1466.6045 -31.2783 C1466.6045 -31.2783 L1466.6016 -34.9463 1463.6279 -37.9189 1459.9629 -37.916 C1459.9629 -37.916 L1427.9014 -37.9072 1391.877 -37.8975 1391.874 -37.8975 C1391.874 -37.8975 L1391.6563 -37.8975 L1391.6475 -37.8975 L1391.1025 -37.9121 1389.3574 -37.9824 1389.0732 -38.0166 C1389.0732 -38.0166 L1376.3506 -39.1992 1366.332 -45.9854 1361.3633 -55.8691 C1361.3633 -55.8691 L1360.1973 -58.1934 1357.8555 -59.5391 1355.4219 -59.5361 C1355.4219 -59.5361 L1354.4199 -59.5361 1353.4063 -59.3096 1352.4502 -58.8301 C1352.4502 -58.8301 LBb1 (Unnamed gradient 2) 1407.6943 -357.0313 90 560.7912 1 0 0 1 0 0 Bg-0.000025 560.7912 122.7578 0.000005 1345.8467 -357.0313 Xm-0.000393 8998.2021 122.7578 0.000005 1345.8467 -9355.2344 Bc-0.000025 560.7912 122.7578 0.000005 1345.8467 -357.0313 Bm-0.000393 8998.2021 122.7578 0.000005 1345.8467 203.7598 Bcf0 BB1352.4209 -94.7158 m1349.1523 -93.0469 1347.8535 -89.0479 1349.5205 -85.7822 C1349.5205 -85.7822 L1356.7324 -71.5898 1371.4277 -62.668 1388.6484 -61.3691 C1388.6484 -61.3691 L1389.7568 -61.291 1391.2227 -61.2334 1392.2129 -61.2266 C1392.2129 -61.2266 L1392.3623 -61.2266 1392.4863 -61.2266 1392.665 -61.2354 C1392.665 -61.2354 L1395.3125 -61.2334 1422.5918 -61.2471 1450.0449 -61.2646 C1450.0449 -61.2646 L1453.709 -61.2686 1456.6836 -64.2402 1456.6816 -67.9111 C1456.6816 -67.9111 L1456.6797 -71.5781 1453.7041 -74.5479 1450.0371 -74.5449 C1450.0371 -74.5449 L1421.1455 -74.5303 1392.4531 -74.5166 1392.4512 -74.5166 C1392.4512 -74.5166 L1392.1846 -74.5166 L1392.1123 -74.5098 L1391.6182 -74.5127 1390.1172 -74.5713 1389.6973 -74.6123 C1389.6973 -74.6123 L1376.2461 -75.7109 1366.2813 -82.1934 1361.3545 -91.8154 C1361.3545 -91.8154 L1360.1787 -94.1162 1357.8486 -95.4414 1355.4287 -95.4385 C1355.4287 -95.4385 L1354.416 -95.4385 1353.3848 -95.2061 1352.4209 -94.7158 C1352.4209 -94.7158 LBb1 (Unnamed gradient 2) 1402.7383 -357.0215 90 560.7709 1 0 0 1 0 0 Bg-0.000025 560.7709 112.8301 0.000005 1345.8535 -357.0215 Xm-0.000395 9029.1582 112.8301 0.000005 1345.8535 -9386.1797 Bc-0.000025 560.7709 112.8301 0.000005 1345.8535 -357.0215 Bm-0.000395 9029.1582 112.8301 0.000005 1345.8535 203.749 Bcf0 BB1352.3848 -130.6006 m1349.127 -128.9121 1347.8613 -124.9023 1349.5518 -121.6475 C1349.5518 -121.6475 L1356.8574 -107.5137 1371.7988 -99.0537 1389.4209 -97.9492 C1389.4209 -97.9492 L1390.3516 -97.8887 1391.5527 -97.8389 1392.5596 -97.8359 C1392.5596 -97.8359 L1392.7881 -97.8389 1392.9971 -97.8418 1393.2334 -97.8506 C1393.2334 -97.8506 L1395.499 -97.8535 1416.7832 -97.8711 1440.4902 -97.8906 C1440.4902 -97.8906 L1444.1572 -97.8945 1447.127 -100.8701 1447.125 -104.5371 C1447.125 -104.5371 L1447.1191 -108.2041 1444.1445 -111.1738 1440.4785 -111.1719 C1440.4785 -111.1719 L1415.4033 -111.1504 1393.0762 -111.1309 1393.0264 -111.1309 C1393.0264 -111.1309 L1392.7813 -111.1279 L1392.5625 -111.1133 L1392.5596 -111.1162 L1392.0762 -111.1162 1390.8535 -111.1621 1390.3232 -111.2002 C1390.3232 -111.2002 L1376.1465 -112.2061 1366.2256 -118.4043 1361.3379 -127.7607 C1361.3379 -127.7607 L1360.1553 -130.043 1357.8379 -131.3477 1355.4375 -131.3477 C1355.4375 -131.3477 L1354.4082 -131.3477 1353.3613 -131.1064 1352.3848 -130.6006 C1352.3848 -130.6006 LBb1 (Unnamed gradient 2) 1397.9639 -357.0352 90 560.7985 1 0 0 1 0 0 Bg-0.000025 560.7985 103.2656 0.000005 1345.8613 -357.0352 Xm-0.000396 9060.2764 103.2656 0.000005 1345.8613 -9417.3125 Bc-0.000025 560.7985 103.2656 0.000005 1345.8613 -357.0352 Bm-0.000396 9060.2764 103.2656 0.000005 1345.8613 203.7637 Bcf0 BB1352.3535 -166.4805 m1349.1084 -164.7686 1347.8711 -160.7529 1349.584 -157.5098 C1349.584 -157.5098 L1356.9883 -143.4336 1372.168 -135.4443 1390.209 -134.5332 C1390.209 -134.5332 L1390.9727 -134.4883 1391.9316 -134.4453 1392.8711 -134.4453 C1392.8711 -134.4453 L1393.1816 -134.4453 1393.4834 -134.4502 1393.8145 -134.4688 C1393.8145 -134.4688 L1395.751 -134.4688 1411.7803 -134.4854 1431.2832 -134.5088 C1431.2832 -134.5088 L1431.2871 -134.5088 L1434.9521 -134.5117 1437.9219 -137.4912 1437.915 -141.1582 C1437.915 -141.1582 L1437.9111 -144.8223 1434.9336 -147.7949 1431.2686 -147.793 C1431.2686 -147.793 L1410.457 -147.7695 1393.6396 -147.748 1393.6064 -147.748 C1393.6064 -147.748 L1393.3711 -147.7461 L1393.1621 -147.7314 L1393.0449 -147.7285 1392.8711 -147.7285 V1392.8711 -147.7285 L1392.3623 -147.7285 1391.5273 -147.7578 1390.9541 -147.793 C1390.9541 -147.793 L1376.0625 -148.6836 1366.1563 -154.6152 1361.3252 -163.708 C1361.3252 -163.708 L1360.1357 -165.9629 1357.8301 -167.25 1355.4492 -167.25 C1355.4492 -167.25 L1354.4033 -167.25 1353.3418 -167.0029 1352.3535 -166.4805 C1352.3535 -166.4805 LBb1 (Unnamed gradient 2) 1393.3643 -357.0371 90 560.8059 1 0 0 1 0 0 Bg-0.000025 560.8059 94.0508 0.000004 1345.8711 -357.0371 Xm-0.000397 9091.5771 94.0508 0.000004 1345.8711 -9448.6133 Bc-0.000025 560.8059 94.0508 0.000004 1345.8711 -357.0371 Bm-0.000397 9091.5771 94.0508 0.000004 1345.8711 203.7686 Bcf0 BB1352.3213 -202.3652 m1349.0898 -200.6309 1347.8779 -196.6006 1349.6152 -193.3721 C1349.6152 -193.3721 L1353.3271 -186.4355 1359.1123 -180.9404 1366.2139 -177.2402 C1366.2139 -177.2402 L1373.3252 -173.5244 1381.709 -171.5215 1390.9873 -171.1123 C1390.9873 -171.1123 L1391.6074 -171.083 1392.3506 -171.0508 1393.167 -171.0508 C1393.167 -171.0508 L1393.5664 -171.0508 1393.9785 -171.0596 1394.4023 -171.0859 C1394.4023 -171.0859 L1420.3057 -171.1211 L1423.9746 -171.127 1426.9414 -174.1025 1426.9375 -177.7705 C1426.9375 -177.7705 L1426.9307 -181.4375 1423.9531 -184.4072 1420.2891 -184.4014 C1420.2891 -184.4014 L1393.9541 -184.3633 L1393.7451 -184.3516 L1393.5996 -184.3408 1393.3936 -184.3311 1393.167 -184.3311 C1393.167 -184.3311 L1392.7236 -184.3311 1392.1689 -184.3516 1391.5879 -184.3838 C1391.5879 -184.3838 L1383.8418 -184.7178 1377.3818 -186.3799 1372.3721 -189.0068 C1372.3721 -189.0068 L1367.3506 -191.6514 1363.7402 -195.167 1361.3135 -199.6602 C1361.3135 -199.6602 L1360.1133 -201.8916 1357.8232 -203.1592 1355.457 -203.1592 C1355.457 -203.1592 L1354.3984 -203.1592 1353.3203 -202.9033 1352.3213 -202.3652 C1352.3213 -202.3652 LBb1 (Unnamed gradient 2) 1387.8799 -357.0381 90 560.8149 1 0 0 1 0 0 Bg-0.000025 560.8149 83.0635 0.000004 1345.8779 -357.0381 Xm-0.000399 9122.001 83.0635 0.000004 1345.8779 -9479.0391 Bc-0.000025 560.8149 83.0635 0.000004 1345.8779 -357.0381 Bm-0.000399 9122.001 83.0635 0.000004 1345.8779 203.7764 Bcf0 BBU*u1 D0 g1279.1826 -181.6807 m1278.6895 -181.6807 1278.2002 -181.7256 1277.7139 -181.7568 C1277.3066 -181.7881 L1276.877 -181.8203 L1193.2891 -181.8203 L1174.1484 -181.8203 1158.5801 -166.251 1158.5801 -147.1094 C1158.5801 -8.49902 L1158.5801 -7.83594 1158.6416 -7.1875 1158.6807 -6.53223 C1157.4941 -6.53223 L1145.167 -6.53223 1135.1748 -16.5225 1135.1748 -28.8496 C1135.1748 -181.623 L1135.1748 -193.9502 1145.167 -203.9404 1157.4941 -203.9404 C1227.2363 -203.9404 L1306.2422 -204.0664 L1303.7656 -191.3633 1292.5068 -181.6807 1279.1826 -181.6807 cf1329.4922 -197.2979 m1329.4922 -57.042 L1329.4922 -38.4443 1329.4922 -25.6758 Y1329.3525 -25.6787 L1329.0898 -5.00879 1313.167 11.8652 1292.8965 13.6416 c1292.0117 13.7471 1291.1221 13.8164 1290.2109 13.8164 C1289.3965 13.8164 L1289.3896 13.8164 1289.3779 13.8184 1289.3701 13.8184 c1289.3613 13.8184 1289.3496 13.8164 1289.3418 13.8164 C1193.2891 13.8164 L1180.9639 13.8164 1170.9707 3.82617 1170.9707 -8.50098 C1170.9707 -147.1064 L1170.9707 -159.4326 1180.9639 -169.4268 1193.2891 -169.4268 C1276.4453 -169.4268 L1277.3555 -169.3652 1278.2588 -169.2471 1279.1826 -169.2871 c1301.1309 -170.2432 1315.7871 -180.9199 1318.6436 -199.1025 C1318.9502 -201.8604 1321.2637 -204.0137 1324.1064 -204.0137 c1327.1553 -204.0137 1329.627 -201.54 1329.627 -198.4912 c1329.627 -198.0791 1329.5762 -197.6846 1329.4922 -197.2979 CBb1 (Unnamed gradient 2) 1232.4004 -357.1211 90 560.9269 1 0 0 1 0 0 Bg-0.000025 560.9269 198.4521 0.000009 1133.1748 -357.1211 Xm-0.000392 8967.3457 198.4521 0.000009 1133.1748 -9324.4668 Bc-0.000025 560.9269 198.4521 0.000009 1133.1748 -357.1211 Bm-0.000392 8967.3457 198.4521 0.000009 1133.1748 203.8057 Bcf0 BB*Uu0 D1354.3174 -19.2217 m1353.0801 -18.6143 1352.5742 -17.1201 1353.1826 -15.8857 C1353.1826 -15.8857 L1359.584 -2.89844 1372.4258 6.33301 1387.4746 7.65527 C1387.4746 7.65527 L1388.6807 7.7832 1391.085 7.84082 1391.2988 7.85059 C1391.2988 7.85059 L1508.8076 7.84766 L1510.1807 7.84766 1511.2979 6.73145 1511.2979 5.35352 C1511.2979 5.35352 L1511.2949 3.97949 1510.1807 2.86719 1508.8066 2.86719 C1508.8066 2.86719 L1391.335 2.86914 L1391.3154 2.86914 1391.2891 2.86719 1391.2539 2.86719 C1391.2539 2.86719 L1391.1836 2.86328 1391.0762 2.86035 1390.9453 2.85742 C1390.9453 2.85742 L1390.6895 2.84863 1390.3418 2.83691 1389.9648 2.81934 C1389.9648 2.81934 L1389.2266 2.79102 1388.3262 2.74121 1387.9883 2.69824 C1387.9883 2.69824 L1374.6445 1.53516 1363.3037 -6.625 1357.6504 -18.0889 C1357.6504 -18.0889 L1357.2158 -18.9688 1356.333 -19.4805 1355.4141 -19.4805 C1355.4141 -19.4805 L1355.0439 -19.4805 1354.6699 -19.3955 1354.3174 -19.2217 C1354.3174 -19.2217 LBb1 (Unnamed gradient 2) 1432.1113 -357.041 90 560.8059 1 0 0 1 0 0 Bg-0.000025 560.8059 162.7236 0.000007 1350.5742 -357.041 Xm-0.000393 8982.5498 162.7236 0.000007 1350.5742 -9339.5898 Bc-0.000025 560.8059 162.7236 0.000007 1350.5742 -357.041 Bm-0.000393 8982.5498 162.7236 0.000007 1350.5742 203.7646 Bcf0 BB1354.3105 -55.1221 m1353.0801 -54.5029 1352.583 -53.0059 1353.2012 -51.7764 C1353.2012 -51.7764 L1359.6553 -38.8896 1372.7012 -30.3193 1388.2441 -28.9238 C1388.2441 -28.9238 L1389.2686 -28.835 1391.2285 -28.7705 1391.8115 -28.7646 C1391.8115 -28.7646 L1391.8389 -28.7646 1391.8711 -28.7646 1391.8984 -28.7646 C1391.8984 -28.7646 L1508.8047 -28.8027 L1508.8076 -28.8027 L1510.1807 -28.8027 1511.2949 -29.918 1511.2949 -31.293 C1511.2949 -31.293 L1511.2949 -32.6641 1510.1797 -33.7832 1508.8047 -33.7832 C1508.8047 -33.7832 L1391.7891 -33.749 L1391.7324 -33.7451 L1391.2598 -33.752 1389.3037 -33.8242 1388.7002 -33.8848 C1388.7002 -33.8848 L1374.6914 -35.1631 1363.2969 -42.7598 1357.6543 -54.0088 C1357.6543 -54.0088 L1357.2178 -54.8838 1356.3398 -55.3857 1355.4248 -55.3857 C1355.4248 -55.3857 L1355.0498 -55.3857 1354.6699 -55.2988 1354.3105 -55.1221 C1354.3105 -55.1221 LBb1 (Unnamed gradient 2) 1432.1152 -357.0293 90 560.7867 1 0 0 1 0 0 Bg-0.000025 560.7867 162.7119 0.000007 1350.583 -357.0293 Xm-0.000394 9018.4717 162.7119 0.000007 1350.583 -9375.5 Bc-0.000025 560.7867 162.7119 0.000007 1350.583 -357.0293 Bm-0.000394 9018.4717 162.7119 0.000007 1350.583 203.7578 Bcf0 BB1354.3037 -91.0186 m1353.0801 -90.3945 1352.5947 -88.8945 1353.2158 -87.668 C1353.2158 -87.668 L1359.7188 -74.9053 1372.9316 -66.7422 1388.9805 -65.5098 C1388.9805 -65.5098 L1389.8818 -65.4404 1391.4316 -65.377 1392.2139 -65.377 C1392.2139 -65.377 L1392.3359 -65.377 1392.4336 -65.377 1392.5537 -65.3857 C1392.5537 -65.3857 L1508.8076 -65.4492 L1508.8076 -65.4521 L1510.1816 -65.4521 1511.2969 -66.5654 1511.2969 -67.9424 C1511.2969 -67.9424 L1511.2939 -69.3174 1510.1797 -70.4307 1508.8047 -70.4307 C1508.8047 -70.4307 L1392.3506 -70.3633 L1392.2578 -70.3574 L1392.2578 -70.3604 1392.2578 -70.3574 1392.2139 -70.3574 C1392.2139 -70.3574 L1391.6777 -70.3545 1390.0273 -70.4189 1389.375 -70.4736 C1389.375 -70.4736 L1374.7402 -71.6328 1363.2969 -78.8809 1357.6563 -89.9326 C1357.6563 -89.9326 L1357.2148 -90.792 1356.3398 -91.292 1355.4355 -91.292 C1355.4355 -91.292 L1355.0527 -91.2891 1354.667 -91.2051 1354.3037 -91.0186 C1354.3037 -91.0186 LBb1 (Unnamed gradient 2) 1432.1211 -357.0303 90 560.7885 1 0 0 1 0 0 Bg-0.000025 560.7885 162.7021 0.000007 1350.5947 -357.0303 Xm-0.000396 9054.3838 162.7021 0.000007 1350.5947 -9411.4141 Bc-0.000025 560.7885 162.7021 0.000007 1350.5947 -357.0303 Bm-0.000396 9054.3838 162.7021 0.000007 1350.5947 203.7578 Bcf0 BB1354.2969 -126.916 m1353.0771 -126.2803 1352.5996 -124.7773 1353.2363 -123.5566 C1353.2363 -123.5566 L1359.7822 -110.9189 1373.1611 -103.1631 1389.7119 -102.0908 C1389.7119 -102.0908 L1390.5088 -102.0381 1391.7168 -101.9883 1392.5596 -101.9883 C1392.5596 -101.9883 L1392.7627 -101.9883 1392.9404 -101.9912 1393.1143 -102 C1393.1143 -102 L1508.8076 -102.0996 L1510.1836 -102.0996 1511.2949 -103.2178 1511.2949 -104.5898 C1511.2949 -104.5898 L1511.2949 -105.9668 1510.1777 -107.0801 1508.8047 -107.0801 C1508.8047 -107.0801 L1392.9492 -106.9834 L1392.8564 -106.9756 L1392.833 -106.9717 1392.7109 -106.9668 1392.5596 -106.9668 C1392.5596 -106.9668 L1391.915 -106.9668 1390.6953 -107.0166 1390.0537 -107.0596 C1390.0537 -107.0596 L1374.79 -108.0967 1363.2969 -114.998 1357.6563 -125.8525 C1357.6563 -125.8525 L1357.2119 -126.707 1356.3428 -127.1943 1355.4434 -127.1943 C1355.4434 -127.1943 L1355.0576 -127.1943 1354.665 -127.1045 1354.2969 -126.916 C1354.2969 -126.916 LBb1 (Unnamed gradient 2) 1432.125 -357.0313 90 560.7893 1 0 0 1 0 0 Bg-0.000025 560.7893 162.6953 0.000007 1350.5996 -357.0313 Xm-0.000397 9090.2881 162.6953 0.000007 1350.5996 -9447.3203 Bc-0.000025 560.7893 162.6953 0.000007 1350.5996 -357.0313 Bm-0.000397 9090.2881 162.6953 0.000007 1350.5996 203.7578 Bcf0 BB1354.293 -162.8125 m1353.0771 -162.167 1352.6104 -160.6631 1353.2539 -159.4473 C1353.2539 -159.4473 L1359.8535 -146.9268 1373.3867 -139.583 1390.4492 -138.6768 C1390.4492 -138.6768 L1391.1465 -138.6357 1392.0654 -138.5977 1392.8672 -138.5977 C1392.8672 -138.5977 L1393.1523 -138.5977 1393.4189 -138.6035 1393.6758 -138.6172 C1393.6758 -138.6172 L1508.8076 -138.7461 L1510.1816 -138.752 1511.2969 -139.8643 1511.2939 -141.2422 C1511.2939 -141.2422 L1511.2939 -142.6172 1510.1758 -143.7295 1508.8018 -143.7295 C1508.8018 -143.7295 L1393.5244 -143.5986 L1393.4424 -143.5928 L1393.3262 -143.584 1393.1094 -143.5781 1392.8672 -143.5781 C1392.8672 -143.5781 L1392.2266 -143.5781 1391.3564 -143.6133 1390.7275 -143.6504 C1390.7275 -143.6504 L1374.8447 -144.5469 1363.2891 -151.1201 1357.6563 -161.7725 C1357.6563 -161.7725 L1357.209 -162.6182 1356.3457 -163.0977 1355.4512 -163.0977 C1355.4512 -163.0977 L1355.0605 -163.0977 1354.6631 -163.0068 1354.293 -162.8125 C1354.293 -162.8125 LBb1 (Unnamed gradient 2) 1432.1289 -357.0195 90 560.7584 1 0 0 1 0 0 Bg-0.000025 560.7584 162.6865 0.000007 1350.6104 -357.0195 Xm-0.000399 9126.207 162.6865 0.000007 1350.6104 -9483.2266 Bc-0.000025 560.7584 162.6865 0.000007 1350.6104 -357.0195 Bm-0.000399 9126.207 162.6865 0.000007 1350.6104 203.7393 Bcf0 BB1354.2822 -198.707 m1353.0703 -198.0557 1352.6182 -196.5488 1353.2715 -195.3359 C1353.2715 -195.3359 L1359.9287 -182.9395 1373.6074 -175.9941 1391.1836 -175.2598 C1391.1836 -175.2598 L1391.7842 -175.2334 1392.4668 -175.207 1393.167 -175.207 C1393.167 -175.207 L1393.5303 -175.207 1393.8965 -175.2129 1394.2588 -175.2363 C1394.2588 -175.2363 L1508.8076 -175.3955 L1508.8115 -175.3984 L1510.1836 -175.3984 1511.2969 -176.5146 1511.2969 -177.8916 C1511.2969 -177.8916 L1511.2939 -179.2637 1510.1777 -180.376 1508.8027 -180.376 C1508.8027 -180.376 L1394.0879 -180.21 L1394.0215 -180.208 L1393.7617 -180.1904 1393.4717 -180.1816 1393.167 -180.1816 C1393.167 -180.1816 L1392.6094 -180.1816 1391.9912 -180.208 1391.4082 -180.2363 C1391.4082 -180.2363 L1374.9072 -180.9834 1363.2842 -187.2402 1357.6592 -197.6963 C1357.6592 -197.6963 L1357.209 -198.5293 1356.3516 -199.0068 1355.4629 -199.0068 C1355.4629 -199.0068 L1355.0625 -199.0068 1354.6592 -198.9102 1354.2822 -198.707 C1354.2822 -198.707 LBb1 (Unnamed gradient 2) 1432.1348 -357.0283 90 560.7781 1 0 0 1 0 0 Bg-0.000025 560.7781 162.6787 0.000007 1350.6182 -357.0283 Xm-0.0004 9162.1133 162.6787 0.000007 1350.6182 -9519.1406 Bc-0.000025 560.7781 162.6787 0.000007 1350.6182 -357.0283 Bm-0.0004 9162.1133 162.6787 0.000007 1350.6182 203.75 Bcf0 BBU*u1 D0 g1573.6895 243.3477 m1698.4072 189.6738 L1698.7207 189.5352 L1699.2334 189.2334 L1700.2324 188.6484 1701.0801 188.21 1701.9014 187.8467 c1704.8066 186.585 1707.8887 185.9395 1711.0391 185.9395 c1720.2393 185.9443 1728.5664 191.3994 1732.2441 199.834 c1733.501 202.7441 1734.1445 205.834 1734.1445 209.0078 c1734.1445 218.2197 1728.6924 226.542 1720.2578 230.1953 c1719.4912 230.5264 1718.7402 230.8027 1717.9492 231.0527 C1717.6709 231.1426 L1717.1826 231.3252 L1569.793 295.4258 L1569.8408 244.4902 L1569.8496 244.4902 1569.8564 244.4912 1569.8672 244.4912 c1571.1514 244.4912 1572.5049 243.8574 1573.6895 243.3477 Cf0 g1799.1631 282.7734 m1797.8301 282.1807 1796.5811 281.4922 1795.3555 280.7617 C1724.1436 248.9668 L1725.3867 248.5576 1726.5801 248.1084 1727.8037 247.584 c1743.1816 240.8936 1753.1025 225.7578 1753.0977 209.0078 c1753.0977 203.2168 1751.9316 197.5859 1749.6211 192.2773 c1748.4502 189.5918 1747.0078 187.084 1745.3584 184.7549 C1822.291 219.166 L1823.4375 219.5352 1824.5479 219.9512 1825.6621 220.4473 c1842.7803 228.0371 1850.7188 248.1416 1843.4092 265.3506 c1836.0801 282.5635 1816.2754 290.3652 1799.1631 282.7734 cf0 g1635.8711 318.1123 m1705.0791 288.252 L1705.4043 288.1152 L1705.9199 287.8086 L1706.4141 287.5176 1706.8662 287.2666 1707.3193 287.0713 c1708.8926 286.3828 1710.5381 286.0449 1712.2266 286.0449 c1717.1357 286.0449 1721.5762 288.96 1723.5352 293.459 c1724.2178 295.0264 1724.5586 296.6709 1724.5586 298.3574 c1724.5586 303.2764 1721.6426 307.7178 1717.1309 309.6689 c1716.7051 309.8633 1716.332 309.9893 1715.9268 310.1133 C1715.6387 310.2021 L1715.1719 310.3896 L1632.002 346.3643 L1632.0117 319.8564 L1632.0195 319.8564 1632.0273 319.8623 1632.0342 319.8564 C1633.1699 319.3291 1633.7471 319.0674 1635.8711 318.1123 Cf0 g1630.3906 353.041 m1717.3496 315.4268 L1717.541 315.3594 L1718.1699 315.1631 1718.7461 314.9561 1719.3086 314.7061 c1726.0361 311.792 1730.043 305.2373 1730.0469 298.3545 c1730.0469 295.9854 1729.5762 293.5898 1728.5693 291.2725 c1725.6523 284.5605 1719.0967 280.5625 1712.2246 280.5547 c1709.8506 280.5547 1707.457 281.0244 1705.1396 282.0332 c1704.4893 282.3174 1703.8301 282.666 1703.1211 283.0869 C1702.9072 283.2129 L1633.6885 313.083 L1631.6631 313.9609 1629.3213 313.0273 1628.4434 311.002 c1627.5693 308.9795 1628.5049 306.6348 1630.5273 305.7627 C1699.3018 276.0762 L1700.1064 275.6064 1700.9824 275.1367 1701.9551 274.7129 c1705.2959 273.2656 1708.793 272.5762 1712.2246 272.5762 C1712.2383 272.5762 L1722.1895 272.5742 1731.6592 278.3916 1735.8877 288.0869 c1737.3369 291.4287 1738.0244 294.9277 1738.0244 298.3545 c1738.0322 308.3145 1732.2148 317.7979 1722.5 322.0215 c1721.7188 322.3662 1720.9268 322.6523 1720.1436 322.9063 C1633.5498 360.3652 L1631.5342 361.2373 1629.1836 360.3115 1628.3096 358.2852 c1627.4316 356.2607 1628.3672 353.917 1630.3906 353.041 Cf0 g1735.6738 319.0498 m1740.6309 313.4492 1743.5195 306.1396 1743.5146 298.3516 c1743.5146 294.0537 1742.6445 289.8623 1740.918 285.9063 c1740.2715 284.4199 1739.5117 283.0078 1738.666 281.667 C1800.2783 308.4404 L1800.9971 308.666 1801.6973 308.9229 1802.3965 309.2295 c1813.1533 313.9004 1818.0889 326.4102 1813.4219 337.167 c1811.043 342.6318 1806.6426 346.5859 1801.4775 348.5498 C1735.9473 319.3232 L1735.6738 319.0498 Lf0 g1724.707 327.0469 m1727.1113 326.0029 1729.3057 324.6523 1731.3193 323.0977 C1793.2842 350.5752 L1795.0938 351.376 L1774.6846 360.3408 1712.3926 387.7051 Y1705.8174 390.4688 L1639.582 363.7412 L1722.085 328.043 L1722.959 327.7529 1723.8369 327.4287 1724.707 327.0469 cf0 g1716.209 108.8252 m1878.0361 178.5176 L1879.2168 179.0293 1880.3867 179.4971 1881.7832 179.8701 C1881.7832 205.4824 L1716.209 132.8672 L1716.209 108.8252 Lf0 g1578.3545 188.3828 m1577.8223 188.6924 L1577.3604 188.9639 1576.9248 189.1953 1576.4961 189.3877 c1575.1689 189.9668 1573.7188 190.2705 1572.2363 190.2705 c1567.8984 190.2637 1563.9795 187.6963 1562.2559 183.7236 c1561.665 182.3555 1561.3604 180.9092 1561.3604 179.4199 c1561.3604 175.084 1563.9268 171.1758 1567.9043 169.46 c1568.3047 169.2822 1568.6338 169.1631 1568.9824 169.0537 C1569.252 168.9746 L1569.6914 168.8027 L1709.1152 109.0293 L1709.1152 133.2559 L1578.6758 188.2432 L1578.3545 188.3828 Lf0 g1568.3867 230.9766 m1692.5859 177.5264 L1693.7949 176.8213 1695.0879 176.126 1696.5059 175.5117 c1701.2363 173.4551 1706.1836 172.4775 1711.041 172.4775 C1711.0596 172.4775 L1725.165 172.4775 1738.5957 180.709 1744.5859 194.4668 c1746.6465 199.2021 1747.6152 204.1484 1747.6152 209.0068 c1747.6191 223.1211 1739.3838 236.5625 1725.6211 242.5459 c1724.4766 243.0449 1723.332 243.4668 1722.1719 243.8369 C1579.7656 305.7783 L1626.5723 326.1084 L1626.5518 334.7959 L1571.668 310.9492 L1571.2725 310.709 L1569.5566 309.6455 1568.8525 307.917 1568.8525 305.75 c1568.8525 303.3359 1570.2832 301.2734 1572.3311 300.3096 C1719.373 236.3564 L1719.5938 236.2861 L1720.5723 235.9795 1721.5068 235.6357 1722.4424 235.2285 c1733.207 230.5645 1739.6309 220.043 1739.6309 209.0068 c1739.6309 205.207 1738.8818 201.3652 1737.2676 197.6455 c1732.585 186.8877 1722.0703 180.459 1711.041 180.4512 c1707.248 180.4512 1703.4004 181.2129 1699.6943 182.8301 c1698.6094 183.3027 1697.5557 183.8643 1696.4541 184.5117 C1696.2373 184.6357 L1571.541 238.2998 L1569.5137 239.1719 1567.1699 238.2373 1566.2988 236.2119 c1565.4277 234.1934 1566.3613 231.8486 1568.3867 230.9766 Cf1885.4463 171.3945 m1884.5713 173.4131 1882.2285 174.3535 1880.2061 173.4746 C1880.2061 173.4814 L1712.916 101.4355 L1567.5361 163.7568 L1567.3525 163.8135 L1566.7852 163.9912 1566.2471 164.1865 1565.7246 164.4199 c1559.5498 167.0947 1555.875 173.1172 1555.875 179.4219 c1555.875 181.5996 1556.3037 183.793 1557.2227 185.9063 c1559.9023 192.0811 1565.9189 195.751 1572.2363 195.7568 c1574.4023 195.7568 1576.5977 195.3301 1578.7344 194.4014 c1579.3281 194.1377 1579.9346 193.8164 1580.5889 193.4287 C1580.8096 193.2969 L1713.1494 137.5166 L1879.8682 210.6357 L1881.8936 211.7441 1883.2949 213.8584 1883.2949 216.334 c1883.2949 218.8613 1881.8535 221.0293 1879.752 222.1182 C1847.7881 235.0879 L1846.6504 232.6484 1845.2793 230.3193 1843.6738 228.1436 C1872.8789 216.2861 L1713.0918 146.1982 L1584.3926 200.4482 L1583.6396 200.8848 1582.8262 201.3203 1581.9219 201.7168 c1578.7686 203.0859 1575.4668 203.7363 1572.2363 203.7363 c1562.8438 203.7422 1553.9004 198.2529 1549.915 189.0977 c1548.541 185.9561 1547.8877 182.6582 1547.8877 179.4219 c1547.8877 170.0332 1553.376 161.0928 1562.5391 157.1045 c1563.2744 156.7832 1564.0117 156.5068 1564.7451 156.2686 C1712.916 92.7529 L1883.3594 166.1543 L1885.3779 167.0234 1886.3154 169.3711 1885.4463 171.3945 cBb1 (Unnamed gradient 2) 1788.8672 315.3584 -128.6129 283.7133 1 0 0 1 0 0 Bg-177.0529 -221.6879 -265.4975 212.0418 1921.6875 209.2803 Xm-6061.0532 -7589.0454 -265.4975 212.0418 7982.7402 7798.3257 Bc-177.0529 -221.6879 -265.4975 212.0418 1921.6875 209.2803 Bm-6061.0532 -7589.0454 -265.4975 212.0418 1744.6348 -12.4072 Bcf0 BB*U*u0 g1293.0615 363.46 m1293.0488 363.4688 L1292.9541 371.0371 1286.9453 377.1406 1279.4277 377.4482 C1279.3701 377.5049 L1257.1602 377.5049 L1249.3086 377.5049 1242.9414 371.1396 1242.9414 363.2861 c1242.9414 362.9326 1243.0186 362.6045 1243.0459 362.2598 C1243.0459 157.8838 L1243.0459 152.4492 1246.1279 147.7852 1250.6045 145.3916 C1250.6777 145.2754 L1292.8701 117.8076 L1293.0615 363.1963 L1293.0615 363.2275 1293.0723 363.2559 1293.0723 363.2861 c1293.0723 363.3154 1293.0615 363.3428 1293.0615 363.3721 C1293.0615 363.46 Lf0 g1231.0215 155.2676 m1231.0215 342.7969 L1231.084 343.3438 1231.1875 343.8848 1231.1875 344.4512 c1231.1875 352.1113 1225.1172 358.3125 1217.5283 358.6143 C1217.4736 358.6699 L1195.4121 358.6699 L1195.4023 358.6563 L1195.3594 358.6582 1195.3203 358.6699 1195.2783 358.6699 c1187.5684 358.6699 1181.3252 352.5225 1181.0977 344.8652 C1181.0059 344.7725 L1181.0059 155.4316 L1181.0059 148.457 1186.0313 142.6826 1192.6572 141.4678 C1203.5049 138.3643 1278.1748 116.9824 Y1237.6699 143.3398 L1230.8555 147.3174 1231.0215 155.2676 Vf0 g1170.1299 146.4258 m1170.1299 327.6709 L1169.7725 328.0156 L1169.0029 335.1465 1163.0371 340.7178 1155.6992 340.7178 c1155.2627 340.7178 1154.8486 340.6279 1154.4209 340.5889 C1135.2969 340.5889 L1134.8662 340.6279 1134.4512 340.7178 1134.0117 340.7178 c1126.1611 340.7178 1119.793 334.3525 1119.793 326.4961 c1119.793 325.4795 1119.9102 324.4922 1120.1133 323.5361 C1120.1133 129.5449 L1120.2266 129.4258 L1120.7803 122.6523 1126.0273 117.2705 1132.7383 116.5117 C1133.0156 116.2275 L1252.3516 116.0439 L1177.4678 135.4824 L1169.9619 138.4717 1170.1299 146.4258 Vf0 g1351.5049 145.3916 m1355.9814 147.7852 1359.0645 152.4492 1359.0645 157.8838 C1359.0645 362.2598 L1359.0908 362.6045 1359.168 362.9326 1359.168 363.2861 c1359.168 371.1396 1352.8008 377.5049 1344.9492 377.5049 C1322.7412 377.5049 L1322.6836 377.4482 L1315.1641 377.1406 1309.1563 371.0371 1309.0576 363.4688 C1309.0459 363.46 L1309.0459 363.3721 L1309.0459 363.3428 1309.0391 363.3154 1309.0391 363.2861 c1309.0391 363.2559 1309.0459 363.2275 1309.0459 363.1963 C1309.2383 117.8076 L1351.4336 145.2754 L1351.5049 145.3916 Lf0 g1468.0947 340.7178 m1467.6543 340.7178 1467.2432 340.6279 1466.8115 340.5889 C1447.6895 340.5889 L1447.2607 340.6279 1446.8467 340.7178 1446.4082 340.7178 c1439.0742 340.7178 1433.1055 335.1465 1432.3389 328.0156 C1431.9795 327.6709 L1431.9795 146.4258 L1432.1465 138.4717 1424.6426 135.4824 Y1349.7578 116.0439 L1469.0938 116.2275 L1469.3701 116.5117 L1476.084 117.2705 1481.3301 122.6523 1481.8828 129.4258 C1481.9961 129.5449 L1481.9961 323.5361 L1482.1992 324.4922 1482.3154 325.4795 1482.3154 326.4961 c1482.3154 334.3525 1475.9521 340.7178 1468.0947 340.7178 cf1421.1045 155.4316 m1421.1045 344.7725 L1421.0098 344.8652 L1420.7832 352.5225 1414.541 358.6699 1406.833 358.6699 c1406.7891 358.6699 1406.75 358.6582 1406.709 358.6563 C1406.6953 358.6699 L1384.6377 358.6699 L1384.583 358.6143 L1376.9922 358.3125 1370.9209 352.1113 1370.9209 344.4512 c1370.9209 343.8848 1371.0254 343.3438 1371.0879 342.7969 C1371.0879 155.2676 L1371.2539 147.3174 1364.4385 143.3398 Y1323.9355 116.9824 L1398.6055 138.3643 1409.4512 141.4678 V1416.0781 142.6826 1421.1045 148.457 1421.1045 155.4316 CBb1 (Unnamed gradient 2) 1301.0547 38.2783 90 410.0204 1 0 0 1 0 0 Bg-0.000018 410.0204 366.5225 0.000016 1117.793 38.2783 Xm-0.000398 9111.2891 366.5225 0.000016 1117.793 -9073.0117 Bc-0.000018 410.0204 366.5225 0.000016 1117.793 38.2783 Bm-0.000398 9111.2891 366.5225 0.000016 1117.793 448.2988 Bcf0 BB*U0 D1053.3682 324.042 m1051.5908 333.5391 1044.0273 340.998 1034.4658 342.6016 C1034.4658 342.9219 L1013.1484 342.9219 L1012.5264 342.9619 1009.835 343.1182 1005.625 343.1221 c995.8477 343.1162 977.8994 342.2773 958.666 337.0352 c939.4619 331.79 918.834 322.1133 904.2041 304.0986 C903.2783 302.9531 L903.2783 163.6377 L903.2207 163.6377 L903.1621 159.5488 L903.0996 155.417 899.7637 152.1094 895.6367 152.1123 c891.5107 152.1094 888.1699 155.417 888.1084 159.5488 C888.0596 162.9922 L888.0596 302.6289 L886.4219 304.2646 L871.8047 322.1719 851.2412 331.8086 832.0957 337.0352 c812.8623 342.2773 794.9141 343.1162 785.1387 343.1221 c780.9248 343.1221 778.2305 342.9629 777.6143 342.9219 C754.9883 342.9219 L755.0254 342.3135 L745.8965 340.2822 738.7861 332.8896 737.2344 323.5801 C736.9189 323.5801 L736.9189 138.6172 L737.4199 138.6172 L739.2432 129.5918 746.3115 122.4834 755.3174 120.6006 C755.2969 119.9756 L844.5391 119.9756 L869.7529 119.9023 L875.79 112.2373 885.4063 107.7422 895.6396 107.7305 c906.0176 107.7324 915.2705 112.6816 921.1455 120.3242 C1001.9404 120.3242 L1001.9404 120.6211 L1012.0635 122.2158 1020.0078 130.3643 1021.2871 140.5869 C1021.4678 140.6162 L1021.4678 228.917 L1029.3057 228.9541 L1030.2129 228.9609 1031.041 229.4512 1031.4785 230.2451 c1031.915 231.0381 1031.8838 232.001 1031.4072 232.7705 C1019.04 252.4863 L1018.5811 253.2197 1017.7813 253.6592 1016.915 253.6533 c1016.0518 253.6494 1015.2598 253.2031 1014.8066 252.4648 C1002.6709 232.6279 L1002.1992 231.8564 1002.1816 230.8945 1002.627 230.1064 c1003.0674 229.3184 1003.8984 228.8379 1004.7998 228.8379 C1004.8066 228.8379 L1013.1689 228.877 L1013.1689 147.6924 L1012.9844 147.6602 L1013.1055 144.002 L1013.1191 143.6768 1013.1504 143.4502 1013.1689 143.3193 C1013.0586 135.2666 1006.5664 128.7598 998.5098 128.6387 C998.377 128.6553 998.1563 128.6816 997.8633 128.6875 C993.6396 128.7666 L993.6396 128.627 L916.7813 128.627 L915.5537 126.7676 L911.2617 120.2949 903.9463 116.0303 895.6396 116.0322 c887.2324 116.0205 879.4834 120.0801 875.3213 126.3486 C874.0938 128.1885 L844.5508 128.2783 L763.8389 128.2783 L763.8408 128.3047 L759.6875 128.415 L751.7842 128.6289 745.4551 134.9639 745.2646 142.8662 C745.2188 144.7656 L745.2188 315.2764 L745.2549 315.2764 L745.2549 319.4297 L745.251 319.668 745.2334 319.8516 745.2197 319.9814 C745.3359 327.8955 751.6611 334.2725 759.5576 334.5576 C761.3105 334.6221 L777.9238 334.6221 L778.0879 334.6348 L778.6758 334.6768 779.8848 334.7246 v781.0957 334.7744 782.8809 334.8232 785.1387 334.8193 c794.4268 334.8262 811.7324 333.9922 829.9111 329.0283 c847.9502 324.1133 866.709 315.1621 879.7568 299.2998 C879.7568 155.3359 L880.4053 155.3359 L882.2793 148.6865 888.3809 143.8096 895.6367 143.8066 c902.8975 143.8096 908.998 148.6895 910.8691 155.3389 C911.5811 155.3389 L911.5811 299.9902 L924.5986 315.4238 943.0732 324.1846 960.8545 329.0283 c979.0293 333.9922 996.3379 334.8262 1005.625 334.8193 c1010.1406 334.8193 1012.6689 334.626 1012.6768 334.6348 C1012.8379 334.6221 L1026.167 334.6221 L1026.167 334.5918 L1030.3174 334.5918 L1030.5293 334.5918 1030.7031 334.6064 1030.834 334.6191 C1038.9023 334.5059 1045.4072 327.9521 1045.4648 319.8633 C1045.4951 315.7412 L1045.541 315.7412 L1045.5439 170.7324 L1053.8447 170.7324 L1053.8447 324.042 L1053.3682 324.042 LBb1 (Unnamed gradient 2) 903.7129 352.5479 -94.5199 309.8376 1 0 0 1 0 0 Bg-24.4169 -308.8741 -330.9529 26.1622 1069.1895 339.4668 Xm-692.8898 -8765.0771 -330.9529 26.1622 1762.0791 9104.5439 Bc-24.4169 -308.8741 -330.9529 26.1622 1069.1895 339.4668 Bm-692.8898 -8765.0771 -330.9529 26.1622 1044.7725 30.5928 Bcf0 BB811.7373 460.0479 m806.4951 468.3945 798.4746 473.0444 791.2695 475.6255 C791.2695 475.6255 L784.2305 478.1548 778.1553 478.5557 777.502 478.582 C777.502 478.582 L726.3506 478.4722 L726.3242 490.0928 L777.6055 490.2012 L777.6055 490.2026 L777.71 490.2026 L777.9287 490.2026 L777.9287 490.2026 L777.9434 490.2026 L777.9434 490.1934 L779.4082 490.127 785.9268 489.7061 794.3398 486.8623 C794.3398 486.8623 L803.2324 483.8257 814.2256 477.8867 821.5713 466.2373 C821.5713 466.2373 L824.6875 461.2871 L877.2803 461.4868 L880.3594 466.4653 L887.3955 477.8086 897.9531 483.8169 906.6865 486.999 C906.6865 486.999 L915.4668 490.1904 922.6201 490.6782 923.8652 490.7544 C923.8652 490.7544 L924.0029 490.7637 L1048.5107 491.3242 L1048.5635 479.7065 L924.3438 479.1436 L923.2656 479.0713 917.4043 478.5498 910.668 476.082 C910.668 476.082 L903.4404 473.4429 895.4102 468.7207 890.2432 460.3486 C890.2432 460.3486 L883.7734 449.8921 L818.2842 449.6436 L811.7373 460.0479 L811.7373 460.0479 LBb1 (Unnamed gradient 2) 887.4434 380.2686 90 393.4725 1 0 0 1 0 0 Bg-0.000017 393.4725 326.2393 0.000014 724.3242 380.2686 Xm-0.000381 8706.0684 326.2393 0.000014 724.3242 -8325.8008 Bc-0.000017 393.4725 326.2393 0.000014 724.3242 380.2686 Bm-0.000381 8706.0684 326.2393 0.000014 724.3242 773.7412 Bcf0 BB*u1 D0 g1707.3516 579.1157 m1708.1211 584.3608 1705.7139 589.2964 1701.6094 592.0923 C1701.6885 592.208 L1608.3984 668.0933 L1606.3926 670.2642 1601.8359 672.7808 1598.6504 672.7222 c1586.54 672.4951 1583.4014 665.771 1583.1602 657.7207 c1583.1191 656.4775 1583.0283 655.2861 1583.1758 654.106 C1583.54 513.959 L1583.5596 513.9575 L1583.2461 508.9043 1585.7461 504.2256 1589.8799 501.6958 C1589.8066 501.5811 L1667.6563 441.4189 L1668.1445 440.9551 L1669.665 440.0068 1671.3906 439.3394 1673.2764 439.062 c1680.5938 437.9902 1687.3984 443.0493 1688.4688 450.3667 c1688.5146 450.6929 1688.4883 451.0103 1688.5117 451.334 C1707.1104 578.145 L1707.1836 578.4722 1707.3047 578.7783 1707.3516 579.1157 cf0 g1774.3047 606.979 m1774.3682 607.2075 L1774.3594 607.2104 L1774.4873 607.688 1774.6484 608.1489 1774.7227 608.6494 c1775.4102 613.3428 1773.5537 617.8027 1770.2217 620.6943 C1770.2676 620.7505 L1674.2207 698.876 L1672.2021 701.1494 1669.4521 702.7866 1666.2109 703.2637 c1658.9092 704.3325 1652.1191 699.291 1651.0293 691.9932 C1650.8057 692.0352 L1651.29 653.2144 L1651.2988 653.2026 L1711.3838 604.1265 L1710.2773 604.7905 L1719.4551 598.519 1724.1641 587.8306 1722.5596 576.8896 c1722.4668 576.2476 1722.3359 575.6284 1722.1807 575.0181 C1703.8467 450.0034 L1703.8203 449.3755 1703.7705 448.7578 1703.6768 448.1392 c1703.5156 447.043 1703.2832 445.9761 1703.0029 444.9312 C1703.0508 444.54 L1706.1572 442.6182 L1706.5938 442.4116 L1708.3018 441.1392 1710.2988 440.21 1712.5547 439.8789 c1718.958 438.939 1724.9688 442.7007 1727.0859 448.5576 C1727.0996 448.5522 L1773.9424 605.7705 L1774.0947 606.1611 1774.1875 606.5728 1774.3047 606.979 Cf1836.0352 651.4521 m1836.0938 651.5356 L1739.7744 729.8853 L1739.6904 729.7529 L1738.1699 730.707 1736.4375 731.3799 1734.5449 731.6577 c1727.2334 732.7295 1720.4287 727.668 1719.3535 720.3525 c1719.3301 720.1719 1719.3506 719.9995 1719.3301 719.8208 C1719.1279 719.8643 L1719.3008 681.5903 L1719.3037 681.5835 L1779.9629 632.6753 L1780.1484 632.5254 L1780.2773 632.311 L1787.749 625.8403 1791.3574 616.1606 1789.9287 606.4199 c1789.7744 605.3638 1789.5342 604.3481 1789.2393 603.3467 C1789.209 603.2573 L1789.1035 602.8584 L1788.9326 602.1948 1788.748 601.5732 1788.5469 600.9849 C1741.8301 444.1709 L1741.7012 443.7402 L1741.5459 443.3345 L1741.5342 443.3037 1741.5176 443.2764 1741.5059 443.2456 C1742.9697 442.1279 L1743.4414 441.7012 L1745.2266 440.2803 1747.3604 439.2573 1749.7764 438.9023 c1757.0156 437.8428 1763.7305 442.7935 1764.9141 449.9902 C1841.2402 634.3657 L1841.0234 634.4648 L1841.5645 635.6216 1842.002 636.8408 1842.1953 638.166 c1842.9922 643.5889 1840.4072 648.7188 1836.0352 651.4521 CBb1 (Unnamed gradient 2) 1712.7168 314.0781 90 538.7266 1 0 0 1 0 0 Bg-0.000024 538.7266 263.9639 0.000012 1581.0283 314.0781 Xm-0.000414 9476.9531 263.9639 0.000012 1581.0283 -9162.875 Bc-0.000024 538.7266 263.9639 0.000012 1581.0283 314.0781 Bm-0.000414 9476.9531 263.9639 0.000012 1581.0283 852.8047 Bcf0 BB*U*u0 g1649.2236 -33.833 m1808.8027 -33.833 L1809.7031 -33.1553 L1809.7031 15.5391 L1636.4814 -26.0771 L1639.0068 -30.7637 1643.8877 -33.7373 1649.2236 -33.833 Cf0 g1646.7168 12.2988 m1646.8555 12.3428 L1646.8555 12.3389 L1647.0879 12.4072 L1791.4043 50.7686 L1789.6982 57.1846 L1645.334 18.8145 L1645.0586 18.7324 L1644.7676 18.6494 L1633.1621 15.0742 1626.0117 7.75684 1622.6074 -0.318359 C1628.7168 -2.91992 L1631.4805 3.4707 1636.8057 9.18066 1646.7168 12.2988 Cf0 g1648.9902 2.53223 m1635.0586 -1.80078 1634.252 -12.5752 1634.75 -17.7363 C1635.2256 -18.0303 L1787.1904 18.6016 L1787.1904 39.374 L1648.9902 2.53223 Lf1648.1035 -45.25 m1640.8564 -45.1191 1633.166 -40.9053 1627.8623 -35.4512 C1621.0586 -35.4512 L1621.0586 -169.7578 L1621.0586 -185.6123 1638.2051 -200.6191 1654.0605 -200.6191 C1795.0049 -200.6191 L1810.8633 -200.6191 1823.7139 -187.7637 1823.7139 -171.9092 C1823.7139 -45.25 L1648.1035 -45.25 LBb1 (Unnamed gradient 2) 1722.3867 -444.7607 90 737.5661 1 0 0 1 0 0 Bg-0.000032 737.5661 206.6553 0.000009 1619.0586 -444.7607 Xm-0.000409 9366.2451 206.6553 0.000009 1619.0586 -9811.0059 Bc-0.000032 737.5661 206.6553 0.000009 1619.0586 -444.7607 Bm-0.000409 9366.2451 206.6553 0.000009 1619.0586 292.8057 Bcf0 BB*U*u0 g1043.2227 -188.4492 m806.2422 -188.4434 L793.375 -188.4229 782.9648 -178.0078 782.9453 -165.1436 c782.9648 -152.2725 793.375 -141.8633 806.2422 -141.8438 C1042.4648 -141.8438 L1046.1387 -141.8438 1049.1182 -138.8623 1049.1182 -135.1924 c1049.1182 -131.5156 1046.1387 -128.5342 1042.4648 -128.5342 C806.2422 -128.5342 L786.0244 -128.541 769.6406 -144.9238 769.6406 -165.1436 c769.6406 -185.3623 786.0244 -201.7441 806.2422 -201.749 C1043.2227 -201.7441 L1046.8945 -201.7441 1049.8711 -198.7676 1049.8711 -195.0947 c1049.8711 -191.4219 1046.8945 -188.4492 1043.2227 -188.4492 Cf0 g1064.1709 -94.0234 m1064.1709 -89.6826 1061.8848 -85.8984 1058.4727 -83.7402 C1005.2451 -45.7217 L1005.1855 -45.7842 L1003.0059 -43.7451 1000.0977 -42.4717 996.8799 -42.4717 c992.8887 -42.4717 989.3809 -44.4189 987.1543 -47.3809 C944.1523 -94.4209 898.8135 -113.999 863.8965 -121.7637 C1027.5508 -121.7637 L1040.2637 -116.8877 1051.502 -109.6367 1059.4746 -103.666 C1059.4316 -103.6074 L1062.2939 -101.375 1064.1709 -97.9316 1064.1709 -94.0234 cf0 g838.3203 -121.6357 m875.3193 -116.1348 929.2324 -96.0059 978.8271 -41.958 C983.3672 -36.1982 989.1094 -30.8193 996.877 -30.9502 c1002.6963 -31.0459 1006.2354 -34.4023 1010.5996 -38.293 C1009.9111 -37.6621 L1031.5186 -53.0967 L1040.168 -44.9453 1049.5605 -36.1484 1054.4678 -30.1514 C1054.4014 -30.0928 L1056.1826 -27.9746 1057.2969 -25.2754 1057.2969 -22.291 c1057.2969 -18.3848 1055.4268 -14.9502 1052.5732 -12.7178 C1052.6104 -12.6367 L985.7197 33.0098 L985.6572 32.9277 L983.4893 34.8984 980.6357 36.1338 977.4756 36.1338 c972.4189 36.1338 968.083 33.0537 966.2334 28.666 C966.2275 28.668 966.2197 28.6738 966.2119 28.6777 C927.8535 -72.9268 845.7129 -106.5049 795.2275 -123.0889 C798.7705 -122.2549 802.4443 -121.7637 806.2373 -121.7637 C838.3203 -121.6357 Lf1041.3711 -147.7695 m807.5244 -147.7695 L797.4922 -147.7861 789.3125 -155.583 789.2959 -165.1494 c789.3125 -174.7012 797.4922 -182.501 807.5273 -182.5156 C1041.3711 -182.5205 L1041.3711 -182.457 L1037.8398 -178.0459 1035.668 -172.1992 1035.668 -165.7598 c1035.668 -159.3164 1037.8398 -153.4736 1041.3711 -149.0566 C1041.3711 -147.7695 LBb1 (Unnamed gradient 2) 888.3896 -244.4424 72.2324 282.7864 1 0 0 1 0 0 Bg86.2942 269.2981 273.5916 -87.67 749.873 -200.0557 Xm2675.2996 8348.7998 273.5916 -87.67 -1925.4268 -8548.8555 Bc86.2942 269.2981 273.5916 -87.67 749.873 -200.0557 Bm2675.2996 8348.7998 273.5916 -87.67 836.167 69.2422 Bcf0 BB*U*u0 g741.3545 670.0581 m725.6367 669.9985 L726.2881 500.6348 L777.9023 500.7461 L812.6699 500.1777 830.4961 471.8521 V840.377 471.8892 L839.7988 623.2715 L829.959 660.0303 794.5303 670.2612 741.3545 670.0581 Cfu0 g1048.4678 501.8687 m1047.8184 671.2319 L959.0166 670.8901 L905.8438 670.689 870.4951 660.1851 860.9355 623.3516 C861.5146 471.9697 L871.3955 472.0088 L889.0039 500.4692 923.7676 501.3037 Y999.748 501.6484 L999.748 506.7935 L994.1074 506.7935 L994.1074 518.1865 L999.8076 518.1865 L999.8076 506.8184 L1011.1406 506.8184 L1011.1406 501.6987 L1048.4678 501.8687 Lf0 D0 g1006.166 567.7231 m1011.9863 567.7231 L1011.9863 562.2378 L1006.166 562.2378 L1006.166 567.7231 Lf0 g1000.3125 573.3179 m1006.1328 573.3179 L1006.1328 567.8301 L1000.3125 567.8301 L1000.3125 573.3179 Lf0 g983.1855 589.9448 m989.0029 589.9448 L989.0029 584.4575 L983.1855 584.4575 L983.1855 589.9448 Lf0 g977.2002 595.7607 m983.0215 595.7607 L983.0215 590.2734 L977.2002 590.2734 L977.2002 595.7607 Lf0 g971.2959 601.4946 m977.1133 601.4946 L977.1133 596.0098 L971.2959 596.0098 L971.2959 601.4946 Lf0 g965.3896 606.9897 m971.21 606.9897 L971.21 601.5034 L965.3896 601.5034 L965.3896 606.9897 Lf0 g959.6211 524.1367 m953.9219 524.1367 L953.9219 621.5908 L959.6211 621.5908 L959.6211 612.4858 L965.3838 612.4858 L965.3838 606.998 L959.6211 606.998 L959.6211 524.1367 Lf0 g965.334 529.6958 m959.6357 529.6958 L959.6357 535.3955 L965.334 535.3955 L965.334 529.6958 Lf0 g971.0479 535.4072 m965.3486 535.4072 L965.3486 541.1074 L971.0479 541.1074 L971.0479 535.4072 Lf0 g982.5537 541.0664 m971.1143 541.0664 L971.1143 546.7656 L976.8447 546.7656 L976.8447 552.4224 L982.5449 552.4224 L982.5449 546.7656 L982.5537 546.7656 L982.5537 541.0664 Lf0 g988.2744 529.6768 m982.5752 529.6768 L982.5752 541.0723 L988.2744 541.0723 L988.2744 529.6768 Lf0 g994.041 518.29 m988.3418 518.29 L988.3418 529.6826 L994.041 529.6826 L994.041 518.29 Lf0 g988.8799 578.8652 m988.8799 584.3516 L994.7021 584.3516 L994.7021 578.8745 L1000.2568 578.8745 L1000.2568 573.3882 L994.4336 573.3882 L994.4336 578.8652 L988.8799 578.8652 Lf0 g994.3623 540.9565 m994.3623 556.8096 L999.8018 556.8096 L999.8018 556.811 L1011.9893 556.811 L1011.9893 562.2041 L1017.8076 562.2041 L1017.8076 556.811 L1022.9219 556.811 L1022.9219 551.1123 L1000.0596 551.1123 L1000.0596 540.9985 L1005.6113 540.9985 L1005.6113 529.6055 L999.9102 529.6055 L999.9102 540.9565 L994.3623 540.9565 Lf1005.5332 518.1826 m1005.5332 529.5737 L1011.2305 529.5737 L1011.2305 518.1865 L1016.8535 518.1865 L1016.8535 506.7935 L1011.1533 506.7935 L1011.1533 518.1826 L1005.5332 518.1826 LBb1 (Unnamed gradient 2) 887.0527 380.2695 90 393.4722 1 0 0 1 0 0 Bg-0.000017 393.4722 326.8311 0.000014 723.6367 380.2695 Xm-0.00038 8683.4707 326.8311 0.000014 723.6367 -8303.2012 Bc-0.000017 393.4722 326.8311 0.000014 723.6367 380.2695 Bm-0.00038 8683.4707 326.8311 0.000014 723.6367 773.7417 Bcf0 BBU*U0 0 0 1 k920.7842 -355.7148 m920.7842 -296.126 L963.8115 -296.126 L964.8604 -296.0977 L969.2832 -296.0977 972.8691 -299.6826 972.8691 -304.1025 C972.9043 -304.9541 L972.9043 -365.9385 L972.8896 -366.7139 L972.8896 -371.1367 969.3066 -374.7197 964.8809 -374.7197 C963.7705 -374.6787 L910.9814 -374.6787 L863.3008 -357.3711 L862.8418 -357.1709 L859.6484 -356.127 857.3232 -353.1523 857.3232 -349.6133 C857.335 -349.3301 L857.335 -287.835 L857.376 -287.8496 L857.373 -287.7852 857.3643 -287.7275 857.3643 -287.6641 c857.3643 -283.2402 860.9502 -279.6582 865.3691 -279.6582 C866.9512 -279.6582 L867.6484 -275.9463 870.8994 -273.1406 874.8115 -273.1406 C875.585 -273.1309 L882.9453 -273.1191 L901.1055 -271.4248 910.7227 -288.9805 V910.7383 -303.5703 L910.7227 -303.5654 L910.7227 -360.6787 L901.1055 -343.124 882.9453 -344.8203 Y875.0264 -344.8203 L874.7881 -344.8086 L870.3711 -344.8086 866.7852 -341.2227 866.7852 -336.8027 C866.7881 -336.5361 L866.7793 -288.9424 866.7793 -288.832 v866.7793 -287.5713 865.7568 -286.5508 864.498 -286.5508 c863.3008 -286.5508 862.3281 -287.4746 862.2344 -288.6494 C862.2285 -288.6465 862.2227 -288.6465 862.2168 -288.6426 C862.2168 -349.0518 L862.2256 -349.5225 L862.2256 -350.5107 862.8496 -351.2949 863.7578 -351.6006 C864.2451 -351.7744 L910.5342 -368.7539 L910.665 -368.7539 L910.665 -368.8584 L965.0488 -368.8584 L965.0488 -368.8438 L966.293 -368.8408 967.2969 -367.835 967.2969 -366.5918 c967.2969 -365.3506 966.293 -364.3457 965.0488 -364.3398 C965.0488 -364.3311 L929.5439 -364.3311 L928.8037 -364.3369 l924.3838 -364.3369 920.8027 -360.7539 920.8027 -356.3369 c920.7842 -355.7148 Lf1701.6465 -363.25 m1701.4727 -363.25 1701.3037 -363.2646 1701.1328 -363.2754 C1700.9902 -363.2871 L1700.8408 -363.2988 L1671.6504 -363.2988 L1664.9678 -363.2988 1659.5293 -357.8623 1659.5293 -351.1787 C1659.5293 -302.7715 L1659.5293 -302.542 1659.5508 -302.3154 1659.5664 -302.0859 C1659.1504 -302.0859 L1654.8467 -302.0859 1651.3574 -305.5762 1651.3574 -309.8789 C1651.3574 -363.2295 L1651.3574 -367.5371 1654.8467 -371.0234 1659.1504 -371.0234 C1683.5059 -371.0234 L1711.0977 -371.0664 L1710.2314 -366.6328 1706.2998 -363.25 1701.6465 -363.25 cfu1727.2422 -307.8164 m1726.0947 -307.25 1725.624 -305.8604 1726.1904 -304.7129 C1726.1904 -304.7129 L1728.6396 -299.7324 1733.5625 -296.1953 1739.3662 -295.6836 C1739.3662 -295.6836 L1739.3662 -295.6865 L1739.957 -295.6289 1740.6162 -295.6201 1740.7988 -295.6143 C1740.7988 -295.6143 L1756.293 -295.6143 1768.2402 -295.6143 V1768.2402 -295.6143 L1769.5215 -295.6143 1770.5586 -296.6543 1770.5586 -297.9326 C1770.5586 -297.9326 L1770.5586 -299.2148 1769.5215 -300.2529 1768.2402 -300.2529 C1768.2402 -300.2529 L1756.584 -300.2529 1741.5488 -300.2529 1740.8252 -300.2529 C1740.8252 -300.2529 L1740.8018 -300.2529 1740.7666 -300.2549 1740.7236 -300.2549 C1740.7236 -300.2549 L1740.6377 -300.2578 1740.5166 -300.2646 1740.3926 -300.2666 C1740.3926 -300.2666 L1740.1543 -300.2764 1739.8428 -300.2959 1739.8428 -300.2988 C1739.8428 -300.2988 L1739.8047 -300.3008 L1739.7676 -300.3076 L1735.6289 -300.665 1732.1045 -303.2012 1730.3477 -306.7617 C1730.3477 -306.7617 L1730.3496 -306.7617 L1729.9453 -307.5811 1729.123 -308.0576 1728.2686 -308.0576 C1728.2686 -308.0576 L1727.9229 -308.0576 1727.5732 -307.9795 1727.2422 -307.8164 C1727.2422 -307.8164 Lf1727.2334 -320.3496 m1726.0889 -319.7744 1725.624 -318.3818 1726.1992 -317.2373 C1726.1992 -317.2373 L1728.6865 -312.2588 1733.7256 -308.9844 1739.5957 -308.4609 C1739.5957 -308.4609 L1740.0664 -308.4238 1740.6826 -308.4063 1740.9756 -308.4033 C1740.9756 -308.4033 L1741.002 -308.4004 1741.0254 -308.4004 1741.0449 -308.4033 C1741.0449 -308.4033 L1741.8887 -308.4033 1753.9805 -308.4063 1764.7783 -308.4092 C1764.7783 -308.4092 L1764.7783 -308.4092 L1766.0605 -308.4092 1767.0957 -309.4463 1767.0957 -310.7285 C1767.0957 -310.7285 L1767.0957 -312.0068 1766.0576 -313.0469 1764.7754 -313.0469 C1764.7754 -313.0469 L1753.582 -313.041 1741.002 -313.0391 1741 -313.0391 C1741 -313.0391 L1740.9238 -313.0391 L1740.9209 -313.0391 L1740.7285 -313.0439 1740.1211 -313.0703 1740.0215 -313.082 C1740.0215 -313.082 L1735.5762 -313.4941 1732.0811 -315.8633 1730.3447 -319.3145 C1730.3447 -319.3145 L1729.9385 -320.126 1729.1201 -320.5967 1728.2686 -320.5967 C1728.2686 -320.5967 L1727.9199 -320.5967 1727.5664 -320.5156 1727.2334 -320.3496 C1727.2334 -320.3496 Lf1727.2227 -332.8799 m1726.0801 -332.2988 1725.627 -330.9014 1726.208 -329.7617 C1726.208 -329.7617 L1728.7275 -324.8047 1733.8574 -321.6895 1739.8721 -321.2354 C1739.8721 -321.2354 L1740.2617 -321.209 1740.7734 -321.1865 1741.1182 -321.1865 C1741.1182 -321.1865 L1741.168 -321.1865 1741.2109 -321.1865 1741.2754 -321.1895 C1741.2754 -321.1895 L1742.2012 -321.1895 1751.7266 -321.1924 1761.3135 -321.1982 C1761.3135 -321.1982 L1762.5938 -321.2012 1763.6309 -322.2393 1763.6309 -323.5195 C1763.6309 -323.5195 L1763.6309 -324.8018 1762.5918 -325.8389 1761.3105 -325.8359 C1761.3105 -325.8359 L1751.2227 -325.8301 1741.2021 -325.8271 Y1741.2021 -325.8271 L1741.1064 -325.8271 L1741.0801 -325.8252 L1740.9111 -325.8252 1740.3857 -325.8447 1740.2383 -325.8594 C1740.2383 -325.8594 L1735.542 -326.2422 1732.0615 -328.5098 1730.3418 -331.8691 C1730.3418 -331.8691 L1729.9307 -332.6709 1729.1172 -333.1328 1728.2715 -333.1328 C1728.2715 -333.1328 L1727.9199 -333.1328 1727.5586 -333.0518 1727.2227 -332.8799 C1727.2227 -332.8799 Lf1727.2109 -345.4131 m1726.0713 -344.8232 1725.6289 -343.4229 1726.2197 -342.2861 C1726.2197 -342.2861 L1728.7705 -337.3496 1733.9902 -334.3945 1740.1436 -334.0107 C1740.1436 -334.0107 L1740.4668 -333.9902 1740.8877 -333.9727 1741.2402 -333.9727 C1741.2402 -333.9727 L1741.3184 -333.9727 1741.3916 -333.9727 1741.4756 -333.9756 C1741.4756 -333.9756 L1742.2656 -333.9756 1749.6982 -333.9814 1757.9785 -333.9902 C1757.9785 -333.9902 L1759.2568 -333.9902 1760.2949 -335.0303 1760.2939 -336.3086 C1760.2939 -336.3086 L1760.292 -337.5908 1759.2539 -338.6279 1757.9736 -338.6279 C1757.9736 -338.6279 L1749.2168 -338.6191 1741.4189 -338.6133 1741.4033 -338.6133 C1741.4033 -338.6133 L1741.3164 -338.6133 L1741.2402 -338.6074 L1741.2402 -338.6074 L1741.0684 -338.6074 1740.6426 -338.625 1740.459 -338.6396 C1740.459 -338.6396 L1735.5068 -338.9883 1732.043 -341.1533 1730.3359 -344.4229 C1730.3359 -344.4229 L1729.9219 -345.2188 1729.1143 -345.6748 1728.2744 -345.6748 C1728.2744 -345.6748 L1727.916 -345.6748 1727.5508 -345.5908 1727.2109 -345.4131 C1727.2109 -345.4131 Lf1727.1992 -357.9443 m1726.0664 -357.3428 1725.6328 -355.9414 1726.2314 -354.8086 C1726.2314 -354.8086 L1728.8174 -349.8945 1734.1172 -347.1045 1740.418 -346.7852 C1740.418 -346.7852 L1740.6855 -346.7705 1741.0195 -346.7559 1741.3477 -346.7559 C1741.3477 -346.7559 L1741.4561 -346.7559 1741.5615 -346.7559 1741.6777 -346.7646 C1741.6777 -346.7646 L1742.3535 -346.7646 1747.9502 -346.7705 1754.7617 -346.7793 C1754.7617 -346.7793 L1754.7637 -346.7793 L1756.0439 -346.7793 1757.0811 -347.8193 1757.0781 -349.0986 C1757.0781 -349.0986 L1757.0781 -350.3799 1756.0371 -351.417 1754.7559 -351.417 C1754.7559 -351.417 L1747.4893 -351.4082 1741.6152 -351.4004 1741.6035 -351.4004 C1741.6035 -351.4004 L1741.5225 -351.4004 L1741.4492 -351.3936 L1741.4092 -351.3936 1741.3477 -351.3936 V1741.3477 -351.3936 L1741.1709 -351.3936 1740.8779 -351.4023 1740.6777 -351.417 C1740.6777 -351.417 L1735.4785 -351.7285 1732.0166 -353.7969 1730.332 -356.9766 C1730.332 -356.9766 L1729.916 -357.7607 1729.1113 -358.2109 1728.2803 -358.2109 C1728.2803 -358.2109 L1727.9141 -358.2109 1727.5449 -358.124 1727.1992 -357.9443 C1727.1992 -357.9443 Lf1727.1875 -370.4746 m1726.0586 -369.8672 1725.6357 -368.4609 1726.2432 -367.333 C1726.2432 -367.333 L1727.5371 -364.9121 1729.5586 -362.9922 1732.0371 -361.6982 C1732.0371 -361.6982 L1734.5215 -360.4023 1737.4482 -359.7012 1740.6895 -359.5596 C1740.6895 -359.5596 L1740.9063 -359.5508 1741.165 -359.5391 1741.4492 -359.5391 C1741.4492 -359.5391 L1741.5918 -359.5391 1741.7344 -359.542 1741.8828 -359.5508 C1741.8828 -359.5508 L1750.9297 -359.5625 L1752.2109 -359.5654 1753.2451 -360.6025 1753.2451 -361.8838 C1753.2451 -361.8838 L1753.2422 -363.166 1752.2012 -364.2002 1750.9229 -364.2002 C1750.9229 -364.2002 L1741.7256 -364.1865 L1741.6533 -364.1826 L1741.6016 -364.1797 1741.5313 -364.1768 1741.4492 -364.1768 C1741.4492 -364.1768 L1741.2949 -364.1768 1741.1035 -364.1826 1740.8994 -364.1943 C1740.8994 -364.1943 L1738.1953 -364.3105 1735.9404 -364.8916 1734.1914 -365.8096 C1734.1914 -365.8096 L1732.4355 -366.7314 1731.1738 -367.9609 1730.3271 -369.5293 C1730.3271 -369.5293 L1729.9072 -370.3086 1729.1084 -370.75 1728.2832 -370.75 C1728.2832 -370.75 L1727.9111 -370.75 1727.5352 -370.6641 1727.1875 -370.4746 C1727.1875 -370.4746 LfU1719.2129 -368.7041 m1719.2129 -361.7363 1719.2129 -308.7725 Y1719.167 -308.7725 L1719.0742 -301.5547 1713.5117 -295.6602 1706.4365 -295.042 c1706.127 -295.0039 1705.8174 -294.9814 1705.4971 -294.9814 C1705.2129 -294.9814 L1705.21 -294.9814 1705.207 -294.9775 1705.2041 -294.9775 c1705.2012 -294.9775 1705.1953 -294.9814 Y1671.6504 -294.9814 L1667.3467 -294.9814 1663.8584 -298.4707 1663.8584 -302.7754 C1663.8584 -351.1758 L1663.8584 -355.4795 1667.3467 -358.9697 1671.6504 -358.9697 C1700.6914 -358.9697 L1701.0078 -358.9492 1701.3223 -358.9082 1701.6465 -358.9229 c1709.3105 -359.2578 1714.4297 -362.9854 1715.4268 -369.332 C1715.5342 -370.2969 1716.3428 -371.0498 1717.333 -371.0498 c1718.3994 -371.0498 1719.2627 -370.1865 1719.2627 -369.1201 c1719.2627 -368.9775 1719.2441 -368.8389 1719.2129 -368.7041 Cf1 Ap1715.4463 -319.7246 m1719.2129 -319.7246 L1719.2129 -368.9053 L1715.4463 -368.9053 L1715.4463 -319.7246 Lfu0 Ap1727.8848 -306.5166 m1727.4521 -306.3047 1727.2754 -305.7852 1727.4902 -305.3525 C1727.4902 -305.3525 L1729.7246 -300.8193 1734.208 -297.5928 1739.4619 -297.1309 C1739.4619 -297.1309 L1739.8848 -297.0879 1740.7236 -297.0674 1740.7988 -297.0645 C1740.7988 -297.0645 L1781.834 -297.0645 L1782.3135 -297.0645 1782.7051 -297.4541 1782.7051 -297.9326 C1782.7051 -297.9326 L1782.7021 -298.416 1782.3135 -298.8057 1781.834 -298.8057 C1781.834 -298.8057 L1740.8105 -298.8018 L1740.8047 -298.8018 1740.7949 -298.8057 1740.7852 -298.8057 C1740.7852 -298.8057 L1740.7588 -298.8057 1740.7207 -298.8057 1740.6738 -298.8086 C1740.6738 -298.8086 L1740.5869 -298.8105 1740.4648 -298.8135 1740.334 -298.8203 C1740.334 -298.8203 L1740.0762 -298.832 1739.7588 -298.8486 1739.6426 -298.8633 C1739.6426 -298.8633 L1734.9814 -299.2705 1731.0234 -302.1182 1729.0469 -306.1221 C1729.0469 -306.1221 L1728.8965 -306.4307 1728.5889 -306.6074 1728.2686 -306.6074 C1728.2686 -306.6074 L1728.1377 -306.6074 1728.0068 -306.5781 1727.8848 -306.5166 C1727.8848 -306.5166 Lf1727.8818 -319.0537 m1727.4521 -318.8389 1727.2783 -318.3154 1727.4951 -317.8857 C1727.4951 -317.8857 L1729.748 -313.3867 1734.3037 -310.3936 1739.7324 -309.9053 C1739.7324 -309.9053 L1740.0898 -309.874 1740.7754 -309.8506 1740.9756 -309.8506 C1740.9756 -309.8506 L1740.9883 -309.8506 1741 -309.8506 1741.0088 -309.8506 C1741.0088 -309.8506 L1781.834 -309.8623 L1781.834 -309.8623 L1782.3135 -309.8623 1782.7021 -310.252 1782.7021 -310.7305 C1782.7021 -310.7305 L1782.7021 -311.2139 1782.3135 -311.6025 1781.834 -311.6025 C1781.834 -311.6025 L1740.9707 -311.5879 L1740.9492 -311.5879 L1740.7852 -311.5918 1740.1016 -311.6182 1739.8906 -311.6377 C1739.8906 -311.6377 L1735 -312.085 1731.0205 -314.7383 1729.0508 -318.667 C1729.0508 -318.667 L1728.8965 -318.9717 1728.5918 -319.1465 1728.2715 -319.1465 C1728.2715 -319.1465 L1728.1406 -319.1465 1728.0068 -319.1172 1727.8818 -319.0537 C1727.8818 -319.0537 Lf1727.8789 -331.5898 m1727.4521 -331.3721 1727.2822 -330.8486 1727.502 -330.4189 C1727.502 -330.4189 L1729.7715 -325.9609 1734.3838 -323.1133 1739.9883 -322.6797 C1739.9883 -322.6797 L1740.3047 -322.6572 1740.8457 -322.6367 1741.1182 -322.6367 C1741.1182 -322.6367 L1741.1621 -322.6367 1741.1943 -322.6367 1741.2373 -322.6396 C1741.2373 -322.6396 L1781.834 -322.6602 L1781.834 -322.6631 L1782.3164 -322.6631 1782.7021 -323.0488 1782.7021 -323.5313 C1782.7021 -323.5313 L1782.7021 -324.0117 1782.3135 -324.4004 1781.834 -324.4004 C1781.834 -324.4004 L1741.165 -324.3779 L1741.1328 -324.374 L1741.1328 -324.374 1741.1182 -324.374 V1741.1182 -324.374 L1740.9307 -324.374 1740.3545 -324.3945 1740.126 -324.415 C1740.126 -324.415 L1735.0166 -324.8193 1731.0205 -327.3506 1729.0508 -331.2129 C1729.0508 -331.2129 L1728.8965 -331.5107 1728.5918 -331.6865 1728.2744 -331.6865 C1728.2744 -331.6865 L1728.1406 -331.6865 1728.0068 -331.6533 1727.8789 -331.5898 C1727.8789 -331.5898 Lf1727.8789 -344.126 m1727.4521 -343.9023 1727.2852 -343.3789 1727.5068 -342.9521 C1727.5068 -342.9521 L1729.793 -338.541 1734.4639 -335.832 1740.2432 -335.4541 C1740.2432 -335.4541 L1740.5234 -335.4375 1740.9443 -335.4199 1741.2402 -335.4199 C1741.2402 -335.4199 L1741.3105 -335.4199 1741.3711 -335.4229 1741.4326 -335.4258 C1741.4326 -335.4258 L1781.834 -335.458 L1782.3164 -335.458 1782.7021 -335.8496 1782.7021 -336.3291 C1782.7021 -336.3291 L1782.7021 -336.8086 1782.3135 -337.1982 1781.834 -337.1982 C1781.834 -337.1982 L1741.377 -337.1631 L1741.3418 -337.1631 L1741.333 -337.1602 1741.293 -337.1572 1741.2402 -337.1572 C1741.2402 -337.1572 L1741.0137 -337.1572 1740.5869 -337.1748 1740.3633 -337.1934 C1740.3633 -337.1934 L1735.0332 -337.5527 1731.0205 -339.9648 1729.0508 -343.7539 C1729.0508 -343.7539 L1728.8936 -344.0537 1728.5918 -344.2227 1728.2773 -344.2227 C1728.2773 -344.2227 L1728.1436 -344.2227 1728.0068 -344.1924 1727.8789 -344.126 C1727.8789 -344.126 Lf1727.876 -356.6621 m1727.4521 -356.4355 1727.2871 -355.9102 1727.5137 -355.4854 C1727.5137 -355.4854 L1729.8174 -351.1152 1734.543 -348.5488 1740.502 -348.2324 C1740.502 -348.2324 L1740.7471 -348.2178 1741.0664 -348.2061 1741.3477 -348.2061 C1741.3477 -348.2061 L1741.4453 -348.2061 1741.54 -348.209 1741.6299 -348.2119 C1741.6299 -348.2119 L1781.834 -348.2588 L1782.3164 -348.2588 1782.7021 -348.6475 1782.7021 -349.127 C1782.7021 -349.127 L1782.7021 -349.6094 1782.3135 -349.999 1781.8311 -349.999 C1781.8311 -349.999 L1741.5781 -349.9531 L1741.5459 -349.9492 L1741.5049 -349.9463 1741.4307 -349.9443 1741.3477 -349.9443 C1741.3477 -349.9443 L1741.124 -349.9443 1740.8193 -349.958 1740.5977 -349.9697 C1740.5977 -349.9697 L1735.0547 -350.2842 1731.0176 -352.5762 1729.0508 -356.2998 C1729.0508 -356.2998 L1728.8936 -356.5928 1728.5918 -356.7617 1728.2803 -356.7617 C1728.2803 -356.7617 L1728.1436 -356.7617 1728.0068 -356.7285 1727.876 -356.6621 C1727.876 -356.6621 Lf1727.873 -369.1953 m1727.4492 -368.9697 1727.29 -368.4395 1727.5186 -368.0186 C1727.5186 -368.0186 L1729.8457 -363.6895 1734.6211 -361.2646 1740.7588 -361.0098 C1740.7588 -361.0098 L1740.9668 -360.998 1741.2061 -360.9893 1741.4492 -360.9893 C1741.4492 -360.9893 L1741.5781 -360.9893 1741.7061 -360.9922 1741.833 -360.998 C1741.833 -360.998 L1781.834 -361.0557 L1781.8359 -361.0557 L1782.3164 -361.0557 1782.7021 -361.4453 1782.7021 -361.9277 C1782.7021 -361.9277 L1782.7021 -362.4072 1782.3135 -362.7939 1781.834 -362.7939 C1781.834 -362.7939 L1741.7725 -362.7393 L1741.749 -362.7354 L1741.6592 -362.7305 1741.5566 -362.7275 1741.4492 -362.7275 C1741.4492 -362.7275 L1741.2549 -362.7275 1741.042 -362.7354 1740.8369 -362.7471 C1740.8369 -362.7471 L1735.0742 -363.0059 1731.0146 -365.1914 1729.0508 -368.8438 C1729.0508 -368.8438 L1728.8936 -369.1348 1728.5938 -369.3008 1728.2832 -369.3008 C1728.2832 -369.3008 L1728.1436 -369.3008 1728.0039 -369.2676 1727.873 -369.1953 C1727.873 -369.1953 LfU1388.1621 -326.8652 m1431.7139 -345.6084 L1431.8252 -345.6582 L1432.0039 -345.7627 L1432.3535 -345.9658 1432.6504 -346.1201 1432.9346 -346.2441 c1433.9521 -346.6865 1435.0264 -346.9131 1436.125 -346.9131 c1439.3408 -346.9102 1442.2461 -345.0039 1443.5332 -342.0596 c1443.9717 -341.043 1444.1953 -339.9648 1444.1953 -338.8574 c1444.1953 -335.6377 1442.292 -332.7314 1439.3457 -331.459 c1439.0781 -331.3428 1438.8145 -331.2441 1438.541 -331.1563 C1438.4414 -331.125 L1438.2725 -331.0605 L1386.8008 -308.6768 L1386.8174 -326.4658 L1386.8203 -326.4658 1386.8232 -326.4639 1386.8262 -326.4639 c1387.2773 -326.4639 1387.748 -326.6875 1388.1621 -326.8652 Cf*u1 D1482.3535 -319.1816 m1479.793 -313.1699 1472.877 -310.4463 1466.8994 -313.0967 c1466.4336 -313.3027 1465.998 -313.5439 1465.5723 -313.7998 C1440.7021 -324.9033 L1441.1377 -325.043 1441.5537 -325.1992 1441.9814 -325.3828 c1447.3516 -327.7217 1450.8154 -333.0049 1450.8154 -338.8574 c1450.8154 -340.8799 1450.4082 -342.8447 1449.5996 -344.6992 c1449.1904 -345.6367 1448.6855 -346.5117 1448.1113 -347.3262 C1474.9775 -335.3096 L1475.376 -335.1787 1475.7656 -335.0332 1476.1543 -334.8613 c1482.1328 -332.209 1484.9043 -325.1875 1482.3535 -319.1816 cf*U0 D1409.877 -300.7549 m1434.0449 -311.1816 L1434.1582 -311.2305 L1434.3379 -311.3379 L1434.5117 -311.4375 1434.6699 -311.5273 1434.8262 -311.5947 c1435.376 -311.835 1435.9512 -311.9541 1436.541 -311.9541 c1438.2559 -311.9541 1439.8066 -310.9346 1440.4902 -309.3652 c1440.7285 -308.8154 1440.8477 -308.2441 1440.8477 -307.6533 c1440.8477 -305.9355 1439.8291 -304.3848 1438.2559 -303.7041 c1438.1045 -303.6377 1437.9766 -303.5918 1437.834 -303.5469 C1437.7324 -303.5186 L1437.5703 -303.4512 L1408.5254 -290.8887 L1408.5303 -300.1455 L1408.5342 -300.1455 1408.5371 -300.1455 v1408.9346 -300.3311 1409.1348 -300.4209 1409.877 -300.7549 Cf1436.5391 -316.6563 m1435.3408 -316.6563 1434.1211 -316.415 1432.9551 -315.9121 C1432.9551 -315.9121 L1432.6152 -315.7617 1432.3105 -315.5977 1432.0273 -315.4355 C1432.0273 -315.4355 L1408.0107 -305.0674 L1407.3047 -304.7627 1406.9785 -303.9434 1407.2832 -303.2393 C1407.2832 -303.2393 L1407.5898 -302.5303 1408.4082 -302.2051 1409.1152 -302.5137 C1409.1152 -302.5137 L1433.2861 -312.9424 L1433.3623 -312.9863 L1433.6084 -313.1348 1433.8389 -313.2529 1434.0645 -313.3555 C1434.0645 -313.3555 L1434.876 -313.707 1435.7129 -313.8691 1436.5391 -313.8691 C1436.5391 -313.8691 L1438.9414 -313.8691 1441.2285 -312.4717 1442.248 -310.127 C1442.248 -310.127 L1442.6006 -309.3193 1442.7656 -308.4814 1442.7656 -307.6533 C1442.7656 -307.6533 L1442.7627 -305.25 1441.3613 -302.9609 1439.0166 -301.9434 C1439.0166 -301.9434 L1438.8174 -301.8564 1438.6152 -301.7832 1438.3955 -301.7168 C1438.3955 -301.7168 L1438.3301 -301.6934 L1407.9639 -288.5557 L1407.2549 -288.25 1406.9297 -287.4307 1407.2383 -286.7246 C1407.2383 -286.7246 L1407.54 -286.0195 1408.3613 -285.6963 1409.0654 -285.998 C1409.0654 -285.998 L1439.3047 -299.0811 L1439.5811 -299.168 1439.8535 -299.2705 1440.127 -299.3887 C1440.127 -299.3887 L1443.5215 -300.8652 1445.5518 -304.1748 1445.5488 -307.6533 C1445.5488 -307.6533 L1445.5488 -308.8506 1445.3115 -310.0742 1444.8057 -311.2402 C1444.8057 -311.2402 L1443.3262 -314.625 1440.0195 -316.6563 1436.5459 -316.6563 C1436.5459 -316.6563 L1436.5439 -316.6563 1436.541 -316.6563 1436.5391 -316.6563 C1436.5391 -316.6563 Lf1444.7305 -300.4268 m1446.459 -302.3828 1447.4697 -304.9365 1447.4668 -307.6563 c1447.4668 -309.1563 1447.1621 -310.6211 1446.5605 -312.001 c1446.334 -312.5205 1446.0703 -313.0156 1445.7734 -313.4834 C1467.29 -304.1318 L1467.542 -304.0537 1467.7852 -303.9629 1468.0303 -303.8555 c1471.7852 -302.2256 1473.5107 -297.8584 1471.8809 -294.1006 c1471.0498 -292.1904 1469.5127 -290.8105 1467.71 -290.125 C1444.8262 -300.3311 L1444.7305 -300.4268 lf1440.8994 -297.6348 m1441.7393 -298 1442.5078 -298.4707 1443.209 -299.0146 C1464.8477 -289.4189 L1465.4785 -289.1396 L1458.3525 -286.0078 1436.5996 -276.4531 Y1434.3027 -275.4873 L1411.1719 -284.8223 L1439.9844 -297.2881 L1440.29 -297.3877 1440.5967 -297.5 1440.8994 -297.6348 cf1437.9297 -365.4434 m1437.9297 -373.8418 L1494.4453 -349.5059 L1494.8574 -349.3252 1495.2656 -349.1621 1495.752 -349.0322 C1495.752 -340.0869 L1437.9297 -365.4434 Lf1435.4541 -365.3105 m1389.9023 -346.1084 L1389.79 -346.0586 L1389.6074 -345.9512 L1389.4443 -345.8555 1389.293 -345.7744 1389.1426 -345.707 c1388.6787 -345.5059 1388.1738 -345.3984 1387.6543 -345.3984 c1386.1406 -345.4014 1384.7715 -346.2998 1384.1709 -347.6855 c1383.9639 -348.1621 1383.8564 -348.668 1383.8564 -349.1875 c1383.8564 -350.7021 1384.7539 -352.0684 1386.1416 -352.667 c1386.2813 -352.7275 1386.3965 -352.7715 1386.5176 -352.8066 C1386.6133 -352.835 L1386.7656 -352.8965 L1435.4541 -373.7695 L1435.4541 -365.3105 Lf1441.2197 -327.1436 m1440.8184 -326.9697 1440.4189 -326.8213 1440.0137 -326.6934 C1390.2842 -305.0615 L1406.6309 -297.9619 L1406.6211 -294.9287 L1387.4541 -303.2568 L1387.3174 -303.3418 L1386.7188 -303.71 1386.4717 -304.3145 1386.4717 -305.0703 c1386.4717 -305.916 1386.9717 -306.6367 1387.6885 -306.9707 C1439.0371 -329.3057 L1439.1162 -329.3291 L1439.4561 -329.4365 1439.7813 -329.5566 1440.1064 -329.6982 c1443.8691 -331.3281 1446.1113 -335.002 1446.1113 -338.8574 c1446.1113 -340.1826 1445.8486 -341.5254 1445.2852 -342.8242 c1443.6523 -346.582 1439.9785 -348.8252 1436.125 -348.8281 c1434.8027 -348.8281 1433.4609 -348.5605 1432.165 -347.9971 c1431.7852 -347.834 1431.418 -347.6357 1431.0313 -347.4102 C1430.959 -347.3662 L1387.4102 -328.626 L1386.7041 -328.3213 1385.8867 -328.6494 1385.582 -329.3555 c1385.2773 -330.0615 1385.6035 -330.8779 1386.3125 -331.1826 C1429.6836 -349.8506 L1430.1045 -350.0947 1430.5547 -350.3389 1431.0518 -350.5508 c1432.7051 -351.2715 1434.4316 -351.6123 1436.125 -351.6123 C1436.1348 -351.6123 L1441.0605 -351.6123 1445.75 -348.7373 1447.8428 -343.9346 c1448.5596 -342.2813 1448.9004 -340.5518 1448.9004 -338.8574 c1448.9023 -333.9287 1446.0234 -329.2334 1441.2197 -327.1436 cf1495.2002 -351.2666 m1495.2002 -351.2627 L1436.7803 -376.4199 L1386.0127 -354.6572 L1385.9492 -354.6367 L1385.751 -354.5752 1385.5654 -354.5088 1385.3809 -354.4277 c1383.2236 -353.4922 1381.9414 -351.3906 1381.9414 -349.1875 c1381.9414 -348.4277 1382.0908 -347.6592 1382.4121 -346.9248 c1383.3477 -344.7656 1385.4492 -343.4873 1387.6543 -343.4834 c1388.4102 -343.4834 1389.1777 -343.6328 1389.9238 -343.957 c1390.1299 -344.0498 1390.3418 -344.1611 1390.5723 -344.2949 C1390.6484 -344.3418 L1436.8633 -363.8223 L1495.084 -338.2881 L1495.79 -337.9023 1496.2813 -337.1602 1496.2813 -336.2979 c1496.2813 -335.4141 1495.7754 -334.6592 1495.043 -334.2783 C1483.8818 -329.7471 L1483.4844 -330.6016 1483.0039 -331.4131 1482.4434 -332.1738 C1492.6436 -336.3154 L1436.8438 -360.7891 L1391.9004 -341.8457 L1391.6387 -341.6934 1391.3535 -341.5391 1391.0371 -341.4033 c1389.9355 -340.9238 1388.7832 -340.6973 1387.6543 -340.6973 c1384.373 -340.6943 1381.251 -342.6123 1379.8594 -345.8086 c1379.3789 -346.9043 1379.1523 -348.0576 1379.1523 -349.1875 c1379.1523 -352.4658 1381.0703 -355.5908 1384.2695 -356.9785 c1384.5244 -357.0928 1384.7832 -357.1885 1385.0391 -357.2734 C1436.7803 -379.4531 L1496.3018 -353.8203 L1497.0088 -353.5186 1497.3359 -352.6953 1497.0313 -351.9922 c1496.7256 -351.2861 1495.9092 -350.958 1495.2002 -351.2666 Cf*u1 D1230.4482 -297.8262 m1230.4482 -298.1807 1230.4893 -298.5254 1230.5625 -298.8604 C1230.5625 -366.6064 L1230.5996 -366.6475 L1230.7949 -369.0127 1232.625 -370.8926 1234.9707 -371.1572 C1235.0664 -371.2559 L1276.7402 -371.3203 L1250.5898 -364.5313 L1247.9688 -363.4883 1248.0273 -360.71 V1248.0273 -297.416 L1247.9023 -297.2969 L1247.6348 -294.8066 1245.5518 -292.8594 1242.9873 -292.8594 c1242.834 -292.8594 1242.6914 -292.8916 1242.54 -292.9063 C1235.8623 -292.9063 L1235.7119 -292.8916 1235.5693 -292.8594 1235.415 -292.8594 c1232.6748 -292.8594 1230.4482 -295.082 1230.4482 -297.8262 cf1276.1563 -361.1113 m1290.8906 -370.7041 L1290.957 -285.0107 L1290.957 -285.002 1290.959 -284.9902 1290.959 -284.9814 c1290.959 -284.9697 1290.957 -284.9609 1290.957 -284.9492 C1290.957 -284.9199 L1290.9531 -284.915 L1290.9189 -282.2734 1288.8232 -280.1396 1286.1963 -280.0352 C1286.1758 -280.0127 L1278.4199 -280.0127 L1278.4199 -280.0127 L1275.6768 -280.0127 1273.4541 -282.2383 1273.4541 -284.9814 c1273.4541 -285.1035 1273.4824 -285.2168 1273.4922 -285.3389 C1273.4922 -356.709 L1273.4922 -358.6064 1274.5664 -360.2363 1276.1309 -361.0713 C1276.1563 -361.1113 Lf1255.8936 -362.4424 m1259.6807 -363.5254 1285.7578 -370.9922 Y1271.6113 -361.7881 L1269.2324 -360.3994 1269.29 -357.6211 V1269.29 -292.1357 L1269.3135 -291.9443 1269.3516 -291.7549 1269.3516 -291.5576 c1269.3516 -288.8809 1267.2295 -286.7168 1264.5801 -286.6123 C1264.5586 -286.5908 L1256.8584 -286.5908 L1256.8516 -286.5977 L1256.8379 -286.5938 1256.8232 -286.5908 1256.8086 -286.5908 c1254.1182 -286.5908 1251.9385 -288.7393 1251.8584 -291.4121 C1251.8252 -291.4443 L1251.8252 -357.5664 L1251.8252 -360.001 1253.5801 -362.0186 1255.8936 -362.4424 Cf*U*u1352.0801 -292.8594 m1351.9287 -292.8594 1351.7832 -292.8916 1351.6328 -292.9063 C1344.9541 -292.9063 L1344.8066 -292.8916 1344.6611 -292.8594 1344.5068 -292.8594 c1341.9473 -292.8594 1339.8633 -294.8066 1339.5938 -297.2969 C1339.4678 -297.416 L1339.4678 -360.71 L1339.5273 -363.4883 1336.9053 -364.5313 Y1310.7568 -371.3203 L1352.4287 -371.2559 L1352.5273 -371.1572 L1354.8721 -370.8926 1356.7031 -369.0127 1356.8945 -366.6475 C1356.9355 -366.6064 L1356.9355 -298.8604 L1357.0049 -298.5254 1357.0469 -298.1807 1357.0469 -297.8262 c1357.0469 -295.082 1354.8242 -292.8594 1352.0801 -292.8594 cf1311.3652 -361.0713 m1312.9277 -360.2363 1314.0068 -358.6064 1314.0068 -356.709 C1314.0068 -285.3389 L1314.0146 -285.2168 1314.041 -285.1035 1314.041 -284.9814 c1314.041 -282.2383 1311.8203 -280.0127 1309.0762 -280.0127 C1309.0742 -280.0127 L1301.3213 -280.0127 L1301.3018 -280.0352 L1298.6748 -280.1396 1296.5762 -282.2734 1296.542 -284.915 C1296.5381 -284.9199 L1296.5381 -284.9492 L1296.5381 -284.9609 1296.5352 -284.9697 1296.5352 -284.9814 c1296.5352 -284.9902 1296.5381 -285.002 1296.5381 -285.0107 C1296.6055 -370.7041 L1311.3418 -361.1113 L1311.3652 -361.0713 Lf1335.6729 -357.5664 m1335.6729 -291.4443 L1335.6387 -291.4121 L1335.5605 -288.7393 1333.3779 -286.5908 1330.6865 -286.5908 c1330.6719 -286.5908 1330.6602 -286.5938 1330.6426 -286.5977 C1330.6396 -286.5908 L1322.9365 -286.5908 L1322.917 -286.6123 L1320.2676 -286.7168 1318.1455 -288.8809 1318.1455 -291.5576 c1318.1455 -291.7549 1318.1816 -291.9443 1318.2051 -292.1357 C1318.2051 -357.6211 L1318.2637 -360.3994 1315.8828 -361.7881 Y1301.7393 -370.9922 L1327.8145 -363.5254 1331.6025 -362.4424 V1333.918 -362.0186 1335.6729 -360.001 1335.6729 -357.5664 Cf*U0 D1143.0762 -369.9746 m1134.2715 -369.9453 L1103.1084 -369.9453 L1103.1133 -369.7275 L1099.9658 -369.0703 1097.5 -366.5898 1096.8623 -363.4365 C1096.8623 -363.4365 L1096.6885 -363.4365 L1096.6885 -300.1816 L1096.6885 -298.8457 L1096.7988 -298.8457 L1097.3428 -295.5938 1099.8242 -293.0137 1103.0117 -292.3047 C1103.0117 -292.3047 L1102.9971 -292.0898 L1110.9023 -292.0898 L1111.1162 -292.0742 1112.0547 -292.0234 1113.5293 -292.0234 C1113.5293 -292.0234 L1116.9395 -292.0234 1123.208 -292.3164 1129.9258 -294.1465 C1129.9258 -294.1465 L1136.6133 -295.9717 1143.7939 -299.3369 1148.8965 -305.5908 C1148.8965 -305.5908 L1149.4688 -306.1631 L1149.4688 -354.9248 L1149.4863 -356.127 L1149.5068 -357.5713 1150.6719 -358.7256 1152.1133 -358.7256 C1152.1133 -358.7256 L1153.5576 -358.7256 1154.7207 -357.5713 1154.7441 -356.127 C1154.7441 -356.127 L1154.7637 -354.7012 L1154.7842 -354.7012 L1154.7842 -306.0469 L1155.1064 -305.6484 L1160.2148 -299.3574 1167.4189 -295.9775 1174.127 -294.1465 C1174.127 -294.1465 L1180.8418 -292.3164 1187.1104 -292.0234 1190.5234 -292.0234 C1190.5234 -292.0234 L1191.9941 -292.0234 1192.9365 -292.0781 1193.1504 -292.0898 C1193.1504 -292.0898 L1199.25 -292.0898 L1200.5967 -292.0898 L1200.5967 -292.2021 L1203.9355 -292.7637 1206.5762 -295.3672 1207.1982 -298.6826 C1207.1982 -298.6826 L1207.3643 -298.6826 L1207.3643 -352.2217 L1204.4639 -352.2217 L1204.4639 -301.583 L1204.4473 -301.583 L1204.4375 -300.1416 L1204.418 -297.3203 1202.1455 -295.0303 1199.3262 -294.9893 C1199.3262 -294.9893 L1199.2832 -294.9961 1199.2217 -295.001 1199.1465 -295.001 C1199.1465 -295.001 L1197.6973 -295.001 L1197.6973 -294.9893 L1193.043 -294.9893 L1192.9863 -294.9863 L1192.9863 -294.9893 1192.1025 -294.9199 1190.5234 -294.9199 C1190.5234 -294.9199 L1187.2813 -294.917 1181.2373 -295.208 1174.8906 -296.9424 C1174.8906 -296.9424 L1168.6797 -298.6338 1162.2285 -301.6934 1157.6816 -307.084 C1157.6816 -307.084 L1157.6816 -357.5977 L1157.4346 -357.5977 L1156.7813 -359.9199 1154.6504 -361.623 1152.1133 -361.626 C1152.1133 -361.626 L1149.5801 -361.623 1147.4492 -359.9229 1146.7959 -357.5977 C1146.7959 -357.5977 L1146.5693 -357.5977 L1146.5693 -307.3252 L1142.0146 -301.7832 1135.4619 -298.6602 1129.1621 -296.9424 C1129.1621 -296.9424 L1122.8154 -295.208 1116.7715 -294.917 1113.5293 -294.9199 C1113.5293 -294.9199 L1112.7383 -294.9199 1112.1162 -294.9375 1111.6924 -294.9551 C1111.6924 -294.9551 L1111.2705 -294.9727 1111.0645 -294.9863 Y1111.0645 -294.9863 L1111.0098 -294.9893 L1105.2051 -294.9893 L1104.5938 -295.0127 L1101.8379 -295.1123 1099.627 -297.3379 1099.585 -300.1035 C1099.585 -300.1035 L1099.5918 -300.1475 1099.5977 -300.2119 1099.6006 -300.2959 C1099.6006 -300.2959 L1099.6006 -301.7451 L1099.585 -301.7451 L1099.585 -361.291 L1099.6035 -361.9541 L1099.6699 -364.7119 1101.8789 -366.9258 1104.6387 -366.999 C1104.6387 -366.999 L1106.0889 -367.04 L1106.0889 -367.0479 L1134.2734 -367.0479 L1144.5898 -367.0801 L1145.0205 -367.7227 L1146.4727 -369.9102 1149.1816 -371.3281 1152.1133 -371.3232 C1152.1133 -371.3232 L1155.0176 -371.3262 1157.5713 -369.835 1159.0703 -367.5732 C1159.0703 -367.5732 L1159.4971 -366.9258 L1186.3398 -366.9258 L1186.3398 -366.876 L1187.8154 -366.9063 L1187.915 -366.9063 1187.9932 -366.918 1188.0391 -366.9209 C1188.0391 -366.9209 L1190.8525 -366.8799 1193.1191 -364.6074 1193.1602 -361.7949 C1193.1602 -361.7949 L1193.1504 -361.75 1193.1426 -361.6689 1193.1367 -361.5566 C1193.1367 -361.5566 L1193.0957 -360.2803 L1193.1602 -360.2686 L1193.1602 -329.2041 L1196.0566 -329.2041 L1196.0566 -362.7393 L1195.9922 -362.75 L1195.5469 -366.3184 1192.7734 -369.1631 1189.2363 -369.7217 C1189.2363 -369.7217 L1189.2363 -369.8262 L1161.0234 -369.8262 L1158.9707 -372.4941 1155.7402 -374.2227 1152.1133 -374.2227 C1152.1133 -374.2227 L1148.542 -374.2197 1145.1826 -372.6514 1143.0762 -369.9746 C1143.0762 -369.9746 Lfu1190.2373 -331.0605 m1194.4707 -324.1338 l1198.79 -331.0205 l1190.2373 -331.0605 lf*u1189.4766 -331.4883 m1189.3213 -331.2129 1189.3291 -330.875 1189.4922 -330.6084 C1189.4922 -330.6084 L1193.7295 -323.6797 L1193.8887 -323.4219 1194.165 -323.2676 1194.4678 -323.2676 C1194.4678 -323.2676 L1194.7695 -323.2646 1195.0488 -323.415 1195.209 -323.6738 C1195.209 -323.6738 L1199.5264 -330.5586 L1199.6953 -330.8252 1199.7061 -331.1631 1199.5527 -331.4385 C1199.5527 -331.4385 L1199.3994 -331.7178 1199.1113 -331.8867 1198.7949 -331.8887 C1198.7949 -331.8887 L1190.2402 -331.9297 L1190.2373 -331.9297 L1190.2373 -331.9297 L1189.9199 -331.9297 1189.6328 -331.7646 1189.4766 -331.4883 C1189.4766 -331.4883 Lf1190.9775 -331.5146 m1190.2373 -331.0605 L1190.9775 -331.5146 L1190.9775 -331.5146 Lf1 D1191.791 -330.1836 m1197.2227 -330.1572 L1194.4824 -325.7871 L1191.791 -330.1836 L1191.791 -330.1836 Lf*UU0 D753.4199 -368.6846 m751.5879 -365.7695 748.7881 -364.1455 746.2715 -363.2441 C746.2715 -363.2441 L743.8125 -362.3613 741.6914 -362.2217 741.4619 -362.2119 C741.4619 -362.2119 L723.6016 -362.25 L723.5898 -358.1943 L741.5 -358.1533 L741.5 -358.1533 L741.5361 -358.1533 L741.6133 -358.1533 L741.6133 -358.1533 L741.6162 -358.1533 L741.6162 -358.1563 L742.1299 -358.1797 744.4053 -358.3271 747.3438 -359.3213 C747.3438 -359.3213 L750.4473 -360.3818 754.2861 -362.457 756.8535 -366.5215 C756.8535 -366.5215 L757.9414 -368.251 L776.3076 -368.1816 L777.3818 -366.4434 L779.8408 -362.4805 783.5254 -360.3848 786.5752 -359.2725 C786.5752 -359.2725 L789.6426 -358.1592 792.1406 -357.9873 792.5732 -357.9609 C792.5732 -357.9609 L792.623 -357.959 L836.1025 -357.7607 L836.1221 -361.8203 L792.7422 -362.0146 L792.3643 -362.041 790.3184 -362.2236 787.9678 -363.085 C787.9678 -363.085 L785.4434 -364.0059 782.6396 -365.6563 780.834 -368.5801 C780.834 -368.5801 L778.5732 -372.2324 L755.7041 -372.3164 L753.4199 -368.6846 L753.4199 -368.6846 Lf*u1 D804.8506 -295.0537 m786.2813 -295.127 773.9355 -298.7939 770.5986 -311.6543 C770.8037 -364.5195 L774.252 -364.5078 L780.4014 -354.5674 792.542 -354.2773 Y836.0898 -354.0791 L835.8613 -294.9375 L804.8506 -295.0537 Lf/BBAccumRotation (0.003827) XT728.8389 -295.3438 m723.3516 -295.3672 L723.5781 -354.5127 L741.6045 -354.4707 L753.7441 -354.6719 759.9707 -364.5635 V763.4189 -364.5488 L763.2188 -311.6846 L759.7813 -298.8486 747.4092 -295.2744 728.8389 -295.3438 Cf/BBAccumRotation (0.003827) XT*U/BBAccumRotation (0.003827) XT0 D1033.8096 -326.4697 m1033.8359 -326.3623 1033.873 -326.2607 1033.8896 -326.1494 c1034.1445 -324.4209 1033.3516 -322.7939 1031.9961 -321.8721 C1032.0234 -321.835 L1001.2803 -296.8262 L1000.6182 -296.1113 999.1162 -295.2803 998.0674 -295.3008 c994.0771 -295.376 993.042 -297.5928 992.9609 -300.2461 c992.9492 -300.6553 992.918 -301.0479 992.9668 -301.4355 C993.0889 -347.6221 L993.0947 -347.6221 L992.9902 -349.2871 993.8154 -350.8301 995.1758 -351.6641 C995.1523 -351.7021 L1020.8086 -371.5283 L1020.9678 -371.6807 L1021.4717 -371.9941 1022.0381 -372.2119 1022.6602 -372.3047 c1025.0713 -372.6563 1027.3145 -370.9922 1027.667 -368.5801 c1027.6816 -368.4727 1027.6719 -368.3672 1027.6816 -368.2598 C1033.8096 -326.4697 Lf1056.0928 -316.415 m1056.3184 -314.8691 1055.7061 -313.4014 1054.6074 -312.4482 C1054.625 -312.4277 L1022.9707 -286.6816 L1022.3066 -285.9346 1021.3984 -285.3945 1020.332 -285.2373 c1017.9258 -284.8848 1015.6885 -286.5449 1015.3281 -288.9512 C1015.2559 -288.9365 L1015.415 -301.7314 L1015.418 -301.7334 L1035.2197 -317.9063 L1034.8535 -317.6875 L1037.8779 -319.7568 1039.4316 -323.2793 1038.9014 -326.8818 c1038.8721 -327.0938 1038.8252 -327.3008 1038.7754 -327.498 C1032.7344 -368.6982 L1032.7256 -368.9053 1032.709 -369.1084 1032.6787 -369.3125 c1032.626 -369.6719 1032.5479 -370.0264 1032.4551 -370.3721 C1032.4736 -370.5 L1033.4951 -371.1338 L1033.6396 -371.2002 L1034.2021 -371.6221 1034.8613 -371.9277 1035.6055 -372.0352 c1037.7158 -372.3457 1039.6943 -371.1045 1040.3945 -369.1748 C1040.3975 -369.1748 L1055.834 -317.3652 L1055.8828 -317.2373 1055.916 -317.1006 1055.9531 -316.9678 C1055.9766 -316.8916 L1055.9707 -316.8916 L1056.0137 -316.7344 1056.0664 -316.5801 1056.0928 -316.415 cf1078.3281 -306.6885 m1078.5898 -304.9023 1077.7383 -303.2129 1076.2969 -302.3125 C1076.3154 -302.2832 L1044.5742 -276.4648 L1044.5469 -276.5078 L1044.0439 -276.1914 1043.4746 -275.9697 1042.8496 -275.8799 c1040.4414 -275.5254 1038.1973 -277.1934 1037.8467 -279.6055 c1037.8379 -279.6641 1037.8428 -279.7217 1037.8379 -279.7803 C1037.7705 -279.7656 L1037.8281 -292.3799 L1037.8281 -292.3799 L1057.8184 -308.499 L1057.8799 -308.5488 L1057.9229 -308.6182 L1060.3848 -310.752 1061.5732 -313.9414 1061.1025 -317.1504 c1061.0527 -317.499 1060.9746 -317.834 1060.876 -318.165 C1060.8652 -318.1934 L1060.832 -318.3242 L1060.7734 -318.542 1060.7129 -318.748 1060.6475 -318.9434 C1045.252 -370.6221 L1045.21 -370.7617 L1045.1572 -370.8955 L1045.1543 -370.9072 1045.1484 -370.916 1045.1455 -370.9238 C1045.6289 -371.293 L1045.7832 -371.4336 L1046.3711 -371.9043 1047.0752 -372.2412 1047.8701 -372.3564 c1050.2578 -372.7061 1052.4707 -371.0762 1052.8613 -368.7012 C1078.0117 -307.9414 L1077.9424 -307.9092 L1078.1191 -307.5283 1078.2637 -307.1279 1078.3281 -306.6885 cf1823.4473 -311.6201 m1879.1738 -311.6201 L1879.4883 -311.3848 L1879.4883 -294.377 L1818.998 -308.9121 L1819.8779 -310.5479 1821.584 -311.585 1823.4473 -311.6201 Cf*u1816.2871 -300.8242 m1816.2871 -300.8242 L1816.2871 -300.8242 L1816.2871 -300.8242 L1816.2871 -300.8242 L1816.2871 -300.8242 Lf1814.1533 -299.915 m1815.3398 -297.0967 1817.8379 -294.5391 1821.8916 -293.292 C1821.8916 -293.292 L1821.9941 -293.2637 L1822.0898 -293.2344 L1872.502 -279.835 L1873.0977 -282.0762 L1822.7002 -295.4717 L1822.6191 -295.4951 L1822.6191 -295.4951 L1822.5723 -295.5098 L1819.1113 -296.5996 1817.251 -298.5928 1816.2871 -300.8242 C1816.2871 -300.8242 L1814.1533 -299.915 L1814.1533 -299.915 Lf*U1823.3652 -298.918 m1818.5 -300.4316 1818.2188 -304.1953 1818.3926 -305.9971 C1818.5586 -306.1016 L1871.627 -293.3096 L1871.627 -286.0537 L1823.3652 -298.918 Lf1823.0557 -315.6074 m1820.5254 -315.5615 1817.8379 -314.0908 1815.9873 -312.1846 C1813.6094 -312.1846 L1813.6094 -359.0859 L1813.6094 -364.625 1819.5996 -369.8643 1825.1377 -369.8643 C1874.3555 -369.8643 L1879.8926 -369.8643 1884.3809 -365.374 1884.3809 -359.8389 C1884.3809 -315.6074 L1823.0557 -315.6074 Lf1521.1328 -357.4736 m1521.1328 -350.415 1526.8516 -344.6924 1533.9131 -344.6924 C1533.9131 -344.6924 L1616.4072 -344.6924 L1617.6895 -344.6924 1618.7285 -345.7334 1618.7285 -347.0146 C1618.7285 -347.0146 L1618.7285 -348.2988 1617.6895 -349.3398 1616.4072 -349.3398 C1616.4072 -349.3398 L1533.9131 -349.3398 L1529.4209 -349.3447 1525.7822 -352.9805 1525.7773 -357.4736 C1525.7773 -357.4736 L1525.7822 -361.9688 1529.4209 -365.6045 1533.9131 -365.6123 C1533.9131 -365.6123 L1616.6699 -365.6123 L1617.9531 -365.6123 1618.9912 -366.6523 1618.9912 -367.9346 C1618.9912 -367.9346 L1618.9912 -369.2158 1617.9531 -370.2568 1616.6699 -370.2568 C1616.6699 -370.2568 L1533.9131 -370.2598 L1526.8516 -370.2568 1521.1328 -364.5342 1521.1328 -357.4736 C1521.1328 -357.4736 Lf1611.1973 -342.3271 m1615.6377 -340.625 1619.5615 -338.0928 1622.3467 -336.0068 C1622.3301 -335.9863 L1623.332 -335.208 1623.9863 -334.0049 1623.9863 -332.6387 c1623.9863 -331.1221 1623.1895 -329.8027 1621.9961 -329.0469 C1603.4082 -315.7695 L1603.3848 -315.793 L1602.624 -315.0811 1601.6094 -314.6367 1600.4863 -314.6367 c1599.0908 -314.6367 1597.8672 -315.3164 1597.0908 -316.3516 C1582.0742 -332.7783 1566.2422 -339.6162 1554.0488 -342.3271 C1611.1973 -342.3271 Lf1533.9111 -342.3271 m1545.1162 -342.2813 L1558.0361 -340.3633 1576.8633 -333.3311 1594.1826 -314.457 C1595.7676 -312.4463 1597.7734 -310.5684 1600.4863 -310.6123 c1602.5166 -310.6475 1603.7549 -311.8203 1605.2813 -313.1777 C1605.0391 -312.957 L1612.583 -318.3477 L1615.6055 -315.5 1618.8828 -312.4277 1620.5977 -310.333 C1620.5742 -310.3125 L1621.1963 -309.5742 1621.585 -308.6328 1621.585 -307.5898 c1621.585 -306.2236 1620.9316 -305.0264 1619.9375 -304.248 C1619.9473 -304.2188 L1596.5879 -288.2764 L1596.5684 -288.3066 L1595.8115 -287.6172 1594.8125 -287.1875 1593.7109 -287.1875 c1591.9453 -287.1875 1590.4316 -288.2617 1589.7832 -289.7939 C1589.7803 -289.791 1589.7773 -289.791 V1576.3818 -325.2725 1547.6963 -336.998 1530.0654 -342.7891 C1531.3047 -342.4961 1532.5879 -342.3271 1533.9111 -342.3271 Cf1614.0332 -357.6904 m1614.0332 -355.4414 1614.791 -353.3994 1616.0234 -351.8594 C1616.0234 -351.4082 L1534.3613 -351.4082 L1530.8555 -351.4141 1528.002 -354.1367 1527.9971 -357.4756 c1528.002 -360.8145 1530.8555 -363.5352 1534.3613 -363.541 C1616.0234 -363.5439 L1616.0234 -363.5205 L1614.791 -361.9805 1614.0332 -359.9375 1614.0332 -357.6904 cf*u1 D0 0 0 0 k805.0654 -344.3613 m807.0566 -344.3613 L807.0566 -342.374 L805.0654 -342.374 L805.0654 -344.3613 Lf807.0625 -342.3672 m809.0527 -342.3672 L809.0527 -340.3779 L807.0625 -340.3779 L807.0625 -342.3672 Lf813.0654 -336.4248 m811.0781 -336.4248 L811.0781 -338.4014 L809.0762 -338.4014 L809.0762 -340.3916 L813.0693 -340.3916 L813.0693 -338.4014 L813.0654 -338.4014 L813.0654 -336.4248 Lf813.0771 -344.3701 m815.0684 -344.3701 L815.0684 -340.3896 L813.0771 -340.3896 L813.0771 -344.3701 Lf815.0908 -348.3457 m817.082 -348.3457 L817.082 -344.3672 L815.0908 -344.3672 L815.0908 -348.3457 Lf819.0957 -348.3809 m817.1055 -348.3809 L817.1055 -352.3613 L819.0762 -352.3613 L819.0762 -354.3398 L823.0537 -354.3398 L823.0537 -352.3525 L819.0957 -352.3525 L819.0957 -348.3809 Lf823.0859 -344.4043 m821.0947 -344.4043 L821.0947 -348.3828 L823.0557 -348.3828 L823.0557 -352.3613 L825.0469 -352.3613 L825.0469 -348.3809 L823.0859 -348.3809 L823.0859 -344.4043 Lf807.0732 -315.4502 m805.0625 -315.4502 L805.0625 -312.2705 L803.0723 -312.2705 L803.0723 -346.3027 L805.0625 -346.3027 L805.0625 -317.3682 L807.0732 -317.3682 L807.0732 -315.4502 Lf809.1074 -317.3711 m807.0771 -317.3711 L807.0771 -319.2861 L809.1074 -319.2861 L809.1074 -317.3711 Lf811.1689 -319.2891 m809.1387 -319.2891 L809.1387 -321.2041 L811.1689 -321.2041 L811.1689 -319.2891 Lf813.2314 -321.292 m811.2002 -321.292 L811.2002 -323.21 L813.2314 -323.21 L813.2314 -321.292 Lf815.3223 -323.3223 m813.291 -323.3223 L813.291 -325.2373 L815.3223 -325.2373 L815.3223 -323.3223 Lf815.2803 -325.2754 m815.2803 -327.1904 L817.2178 -327.1904 L817.2178 -329.1055 L819.251 -329.1055 L819.251 -327.1875 L817.3115 -327.1875 L817.3115 -325.2754 L815.2803 -325.2754 Lf821.3037 -329.1289 m819.2715 -329.1289 L819.2715 -331.0469 L821.3037 -331.0469 L821.3037 -329.1289 Lf823.3496 -331.084 m821.3154 -331.084 L821.3154 -333 L823.3496 -333 L823.3496 -331.084 Lf825.3809 -334.8916 m825.3809 -333.0107 L823.3496 -333.0107 L823.3496 -334.8916 L819.0928 -334.8916 L819.0928 -334.8945 L817.1953 -334.8945 L817.1953 -340.4297 L819.1309 -340.4297 L819.1309 -344.3936 L821.1211 -344.3936 L821.1211 -340.415 L819.1836 -340.415 L819.1836 -336.8848 L827.168 -336.8848 L827.168 -334.8916 L825.3809 -334.8916 Lf*U1 Ap0 D0 R0 0 0 0 K1915.5098 -444.4307 m683.5771 -444.4307 L683.5771 787.5015 L1915.5098 787.5015 L1915.5098 -444.4307 Ls*u0 Ap1 D0 O0 g741.3545 670.0581 m725.6367 669.9985 L726.0098 572.938 L760.7197 556.1753 799.3271 546.2222 840.0996 544.7617 C839.7988 623.2715 L829.959 660.0303 794.5303 670.2612 741.3545 670.0581 Cfu0 g1048.001 623.3936 m1047.8184 671.2319 L959.0166 670.8901 L905.8438 670.689 870.4951 660.1851 860.9355 623.3516 C861.2363 544.771 L893.8135 545.9673 925.001 552.5894 953.9219 563.7764 C953.9219 621.5908 L959.6211 621.5908 L959.6211 612.4858 L965.3838 612.4858 L965.3838 606.998 L959.6211 606.998 L959.6211 566.0547 L969.6729 570.1934 979.4395 574.8833 988.8799 580.0942 C988.8799 584.3516 L994.7021 584.3516 L994.7021 583.3955 L1014.0146 594.6519 1031.8975 608.0928 1048.001 623.3936 Cf0 D0 g971.21 601.5034 m965.3896 601.5034 L965.3896 606.9897 L971.21 606.9897 L971.21 601.5034 Lf0 g977.1133 596.0098 m971.2959 596.0098 L971.2959 601.4946 L977.1133 601.4946 L977.1133 596.0098 Lf0 g983.0215 590.2734 m977.2002 590.2734 L977.2002 595.7607 L983.0215 595.7607 L983.0215 590.2734 Lf989.0029 584.4575 m983.1855 584.4575 L983.1855 589.9448 L989.0029 589.9448 L989.0029 584.4575 LBb1 (Unnamed gradient 2) 743.3252 582.6367 19.5177 547.7581 1 0 0 1 0 0 Bg516.283 183.0049 60.5621 -170.8544 713.1719 667.7026 Xm8153.7925 2890.2446 60.5621 -170.8544 -7440.6206 -2222.542 Bc516.283 183.0049 60.5621 -170.8544 713.1719 667.7026 Bm8153.7925 2890.2446 60.5621 -170.8544 1229.4551 850.7075 Bcf0 BBU*U*u1 D0 g1463.9873 644.98 m1463.9873 657.6421 1453.7266 667.9048 1441.0586 667.9048 C1438.0566 667.8262 L1314.8447 667.8262 L1314.8447 546.9941 L1337.6689 540.8438 1361.666 537.5444 1386.4336 537.5444 c1413.4063 537.5444 1439.4648 541.4526 1464.0898 548.7031 C1464.0898 642.5391 L1463.9873 644.98 Lf1206.4844 733.7007 m1185.4121 733.6709 L1183.1963 733.6479 L1171.9971 733.6479 1162.6855 725.605 1160.6846 714.9814 C1156.1602 714.9814 L1146.8008 714.9814 1138.7598 709.3594 1135.2012 701.312 C1138.7998 693.1587 1142.7822 685.2148 1147.1289 677.5015 C1147.1289 689.2544 L1147.1475 689.2461 1147.166 689.2427 1147.1807 689.2363 C1147.4512 692.5957 1150.2344 695.2441 1153.6592 695.2441 c1157.2686 695.2441 1160.1953 692.3193 1160.1953 688.7104 c1160.1953 688.6108 1160.1982 675.0728 1160.2031 656.5596 C1191.0186 611.812 1234.751 576.6509 1286.0352 556.4883 C1286.0352 646.5244 L1286.0723 646.5088 L1286.0352 688.2861 L1258.4912 738.5576 1206.4844 733.7007 YBb1 (Unnamed gradient 2) 1067.7314 605.0405 7.71189 864.816 1 0 0 1 0 0 Bg856.9941 116.0512 30.9614 -228.6378 1052.2383 719.4482 Xm8795.6738 1191.0804 30.9614 -228.6378 -7743.4355 -471.6318 Bc856.9941 116.0512 30.9614 -228.6378 1052.2383 719.4482 Bm8795.6738 1191.0804 30.9614 -228.6378 1909.2324 835.4995 Bcf0 BB*U*u0 g1701.6094 592.0923 m1701.6885 592.208 L1608.3984 668.0933 L1606.3926 670.2642 1601.8359 672.7808 1598.6504 672.7222 c1586.54 672.4951 1583.4014 665.771 1583.1602 657.7207 c1583.1191 656.4775 1583.0283 655.2861 1583.1758 654.106 C1583.3506 586.8955 L1615.8398 558.0972 1655.7129 537.4526 1699.7822 528.1685 C1707.1104 578.145 L1707.1836 578.4722 1707.3047 578.7783 1707.3516 579.1157 c1708.1211 584.3608 1705.7139 589.2964 1701.6094 592.0923 Cf0 g1836.0352 651.4521 m1836.0938 651.5356 L1739.7744 729.8853 L1739.6904 729.7529 L1738.1699 730.707 1736.4375 731.3799 1734.5449 731.6577 c1727.2334 732.7295 1720.4287 727.668 1719.3535 720.3525 c1719.3301 720.1719 1719.3506 719.9995 1719.3301 719.8208 C1719.1279 719.8643 L1719.3008 681.5903 L1719.3037 681.5835 L1779.9629 632.6753 L1780.1484 632.5254 L1780.2773 632.311 L1787.749 625.8403 1791.3574 616.1606 1789.9287 606.4199 c1789.7744 605.3638 1789.5342 604.3481 1789.2393 603.3467 C1789.209 603.2573 L1789.1035 602.8584 L1788.9326 602.1948 1788.748 601.5732 1788.5469 600.9849 C1765.3076 522.9795 L1775.9082 523.4956 1786.3359 524.6631 1796.5586 526.4336 C1841.2402 634.3657 L1841.0234 634.4648 L1841.5645 635.6216 1842.002 636.8408 1842.1953 638.166 c1842.9922 643.5889 1840.4072 648.7188 1836.0352 651.4521 Cf1774.3047 606.979 m1774.3682 607.2075 L1774.3594 607.2104 L1774.4873 607.688 1774.6484 608.1489 1774.7227 608.6494 c1775.4102 613.3428 1773.5537 617.8027 1770.2217 620.6943 C1770.2676 620.7505 L1674.2207 698.876 L1672.2021 701.1494 1669.4521 702.7866 1666.2109 703.2637 c1658.9092 704.3325 1652.1191 699.291 1651.0293 691.9932 C1650.8057 692.0352 L1651.29 653.2144 L1651.2988 653.2026 L1711.3838 604.1265 L1710.2773 604.7905 L1719.4551 598.519 1724.1641 587.8306 1722.5596 576.8896 c1722.4668 576.2476 1722.3359 575.6284 1722.1807 575.0181 C1714.9131 525.4541 L1726.1182 523.792 1737.5645 522.8677 1749.1953 522.7114 C1773.9424 605.7705 L1774.0947 606.1611 1774.1875 606.5728 1774.3047 606.979 CBb1 (Unnamed gradient 2) 1712.7168 517.7451 90 322.236 1 0 0 1 0 0 Bg-0.000014 322.236 263.9639 0.000012 1581.0283 517.7451 Xm-0.000419 9595.75 263.9639 0.000012 1581.0283 -9078.0039 Bc-0.000014 322.236 263.9639 0.000012 1581.0283 517.7451 Bm-0.000419 9595.75 263.9639 0.000012 1581.0283 839.981 Bcf0 BB*U*u0 g1883.2949 216.334 m1883.2949 218.8613 1881.8535 221.0293 1879.752 222.1182 C1847.7881 235.0879 L1846.6504 232.6484 1845.2793 230.3193 1843.6738 228.1436 C1872.8789 216.2861 L1726.7266 152.1787 L1729.1094 150.2939 1731.5322 148.4541 1733.9814 146.6523 C1879.8682 210.6357 L1881.8936 211.7441 1883.2949 213.8584 1883.2949 216.334 cf0 g1881.7832 179.8701 m1881.7832 205.4824 L1739.1719 142.9385 L1746.5703 137.7783 1754.249 132.9971 1762.1895 128.627 C1878.0361 178.5176 L1879.2168 179.0293 1880.3867 179.4971 1881.7832 179.8701 Cf0 g1885.4463 171.3945 m1884.5713 173.4131 1882.2285 174.3535 1880.2061 173.4746 C1880.2061 173.4814 L1768.3828 125.3232 L1771.498 123.7217 1774.6563 122.1895 1777.8438 120.7139 C1883.3594 166.1543 L1885.3779 167.0234 1886.3154 169.3711 1885.4463 171.3945 cf0 g1799.1631 282.7734 m1797.8301 282.1807 1796.5811 281.4922 1795.3555 280.7617 C1724.1436 248.9668 L1725.3867 248.5576 1726.5801 248.1084 1727.8037 247.584 c1743.1816 240.8936 1753.1025 225.7578 1753.0977 209.0078 c1753.0977 203.2168 1751.9316 197.5859 1749.6211 192.2773 c1748.4502 189.5918 1747.0078 187.084 1745.3584 184.7549 C1822.291 219.166 L1823.4375 219.5352 1824.5479 219.9512 1825.6621 220.4473 c1842.7803 228.0371 1850.7188 248.1416 1843.4092 265.3506 c1836.0801 282.5635 1816.2754 290.3652 1799.1631 282.7734 cf0 g1698.7207 189.5352 m1699.2334 189.2334 L1700.2324 188.6484 1701.0801 188.21 1701.9014 187.8467 c1704.8066 186.585 1707.8887 185.9395 1711.0391 185.9395 c1720.2393 185.9443 1728.5664 191.3994 1732.2441 199.834 c1733.501 202.7441 1734.1445 205.834 1734.1445 209.0078 c1734.1445 218.2197 1728.6924 226.542 1720.2578 230.1953 c1719.4912 230.5264 1718.7402 230.8027 1717.9492 231.0527 C1717.6709 231.1426 L1717.1826 231.3252 L1646.1533 262.2148 L1655.1953 238.3115 1667.7178 216.1191 1683.1074 196.2568 C1698.4072 189.6738 L1698.7207 189.5352 Lf0 g1705.0791 288.252 m1705.4043 288.1152 L1705.9199 287.8086 L1706.4141 287.5176 1706.8662 287.2666 1707.3193 287.0713 c1708.8926 286.3828 1710.5381 286.0449 1712.2266 286.0449 c1717.1357 286.0449 1721.5762 288.96 1723.5352 293.459 c1724.2178 295.0264 1724.5586 296.6709 1724.5586 298.3574 c1724.5586 303.2764 1721.6426 307.7178 1717.1309 309.6689 c1716.7051 309.8633 1716.332 309.9893 1715.9268 310.1133 C1715.6387 310.2021 L1715.1719 310.3896 L1632.002 346.3643 L1632.0117 319.8564 L1632.0195 319.8564 1632.0273 319.8623 1632.0342 319.8564 C1633.1699 319.3291 1633.7471 319.0674 1635.8711 318.1123 C1705.0791 288.252 Lf0 g1744.5859 194.4668 m1746.6465 199.2021 1747.6152 204.1484 1747.6152 209.0068 c1747.6191 223.1211 1739.3838 236.5625 1725.6211 242.5459 c1724.4766 243.0449 1723.332 243.4668 1722.1719 243.8369 C1640.3389 279.4307 L1641.3555 276.0313 1642.4297 272.6582 1643.5801 269.3193 C1719.373 236.3564 L1719.5938 236.2861 L1720.5723 235.9795 1721.5068 235.6357 1722.4424 235.2285 c1733.207 230.5645 1739.6309 220.043 1739.6309 209.0068 c1739.6309 205.207 1738.8818 201.3652 1737.2676 197.6455 c1732.585 186.8877 1722.0703 180.459 1711.041 180.4512 c1707.248 180.4512 1703.4004 181.2129 1699.6943 182.8301 c1698.6094 183.3027 1697.5557 183.8643 1696.4541 184.5117 C1696.2373 184.6357 L1690.5723 187.0742 L1694.5918 182.3516 1698.7803 177.7773 1703.1289 173.3633 C1705.7607 172.7734 1708.4121 172.4775 1711.041 172.4775 C1711.0596 172.4775 L1725.165 172.4775 1738.5957 180.709 1744.5859 194.4668 cf0 g1735.6738 319.0498 m1740.6309 313.4492 1743.5195 306.1396 1743.5146 298.3516 c1743.5146 294.0537 1742.6445 289.8623 1740.918 285.9063 c1740.2715 284.4199 1739.5117 283.0078 1738.666 281.667 C1800.2783 308.4404 L1800.9971 308.666 1801.6973 308.9229 1802.3965 309.2295 c1813.1533 313.9004 1818.0889 326.4102 1813.4219 337.167 c1811.043 342.6318 1806.6426 346.5859 1801.4775 348.5498 C1735.9473 319.3232 L1735.6738 319.0498 Lf0 g1701.9551 274.7129 m1705.2959 273.2656 1708.793 272.5762 1712.2246 272.5762 C1712.2383 272.5762 L1722.1895 272.5742 1731.6592 278.3916 1735.8877 288.0869 c1737.3369 291.4287 1738.0244 294.9277 1738.0244 298.3545 c1738.0322 308.3145 1732.2148 317.7979 1722.5 322.0215 c1721.7188 322.3662 1720.9268 322.6523 1720.1436 322.9063 C1633.5498 360.3652 L1632.2881 360.9111 1630.8965 360.7529 1629.8154 360.0596 C1629.752 357.8545 1629.7168 355.6416 1629.707 353.4219 C1629.9199 353.2754 1630.1465 353.1455 1630.3906 353.041 C1717.3496 315.4268 L1717.541 315.3594 L1718.1699 315.1631 1718.7461 314.9561 1719.3086 314.7061 c1726.0361 311.792 1730.043 305.2373 1730.0469 298.3545 c1730.0469 295.9854 1729.5762 293.5898 1728.5693 291.2725 c1725.6523 284.5605 1719.0967 280.5625 1712.2246 280.5547 c1709.8506 280.5547 1707.457 281.0244 1705.1396 282.0332 c1704.4893 282.3174 1703.8301 282.666 1703.1211 283.0869 C1702.9072 283.2129 L1633.6885 313.083 L1633.3613 313.2246 1633.0264 313.3037 1632.6914 313.3535 C1633.1689 310.2598 1633.7148 307.1895 1634.3018 304.1328 C1699.3018 276.0762 L1700.1064 275.6064 1700.9824 275.1367 1701.9551 274.7129 cf1724.707 327.0469 m1727.1113 326.0029 1729.3057 324.6523 1731.3193 323.0977 C1793.2842 350.5752 L1795.0938 351.376 L1774.6846 360.3408 1712.3926 387.7051 Y1705.8174 390.4688 L1639.582 363.7412 L1722.085 328.043 L1722.959 327.7529 1723.8369 327.4287 1724.707 327.0469 cBb1 (Unnamed gradient 2) 1664.6602 338.9482 -41.4012 335.2158 1 0 0 1 0 0 Bg251.4445 -221.6875 -134.0344 -152.0258 1731.8682 415.1777 Xm7195.502 -6343.9556 -134.0344 -152.0258 -5463.6338 6759.1333 Bc251.4445 -221.6875 -134.0344 -152.0258 1731.8682 415.1777 Bm7195.502 -6343.9556 -134.0344 -152.0258 1983.3125 193.4902 Bcf0 BB*U*u0 g1468.0947 340.7178 m1467.6543 340.7178 1467.2432 340.6279 1466.8115 340.5889 C1447.6895 340.5889 L1447.2607 340.6279 1446.8467 340.7178 1446.4082 340.7178 c1439.0742 340.7178 1433.1055 335.1465 1432.3389 328.0156 C1431.9795 327.6709 L1431.9795 222.6172 L1450.2119 233.2666 1467.002 246.1104 1481.9961 260.7861 C1481.9961 323.5361 L1482.1992 324.4922 1482.3154 325.4795 1482.3154 326.4961 c1482.3154 334.3525 1475.9521 340.7178 1468.0947 340.7178 cf0 g1406.833 358.6699 m1406.7891 358.6699 1406.75 358.6582 1406.709 358.6563 C1406.6953 358.6699 L1384.6377 358.6699 L1384.583 358.6143 L1376.9922 358.3125 1370.9209 352.1113 1370.9209 344.4512 c1370.9209 343.8848 1371.0254 343.3438 1371.0879 342.7969 C1371.0879 196.998 L1388.5811 201.7959 1405.3252 208.4043 1421.1045 216.6172 C1421.1045 344.7725 L1421.0098 344.8652 L1420.7832 352.5225 1414.541 358.6699 1406.833 358.6699 cf0 g1344.9492 377.5049 m1322.7412 377.5049 L1322.6836 377.4482 L1315.1641 377.1406 1309.1563 371.0371 1309.0576 363.4688 C1309.0459 363.46 L1309.0459 363.3721 L1309.0459 363.3428 1309.0391 363.3154 1309.0391 363.2861 c1309.0391 363.2559 1309.0459 363.2275 1309.0459 363.1963 C1309.1836 187.9775 L1326.2793 188.3584 1342.957 190.4287 1359.0645 194.0117 C1359.0645 362.2598 L1359.0908 362.6045 1359.168 362.9326 1359.168 363.2861 c1359.168 371.1396 1352.8008 377.5049 1344.9492 377.5049 Cf0 g1217.5283 358.6143 m1217.4736 358.6699 L1195.4121 358.6699 L1195.4023 358.6563 L1195.3594 358.6582 1195.3203 358.6699 1195.2783 358.6699 c1187.5684 358.6699 1181.3252 352.5225 1181.0977 344.8652 C1181.0059 344.7725 L1181.0059 219.0723 L1196.7461 210.4658 1213.4922 203.4785 1231.0215 198.3115 C1231.0215 342.7969 L1231.084 343.3438 1231.1875 343.8848 1231.1875 344.4512 c1231.1875 352.1113 1225.1172 358.3125 1217.5283 358.6143 Cf0 g1155.6992 340.7178 m1155.2627 340.7178 1154.8486 340.6279 1154.4209 340.5889 C1135.2969 340.5889 L1134.8662 340.6279 1134.4512 340.7178 1134.0117 340.7178 c1126.1611 340.7178 1119.793 334.3525 1119.793 326.4961 c1119.793 325.4795 1119.9102 324.4922 1120.1133 323.5361 C1120.1133 265.4209 L1135.0059 250.082 1151.8027 236.6025 1170.1299 225.374 C1170.1299 327.6709 L1169.7725 328.0156 L1169.0029 335.1465 1163.0371 340.7178 1155.6992 340.7178 cf1293.0615 363.46 m1293.0488 363.4688 L1292.9541 371.0371 1286.9453 377.1406 1279.4277 377.4482 C1279.3701 377.5049 L1257.1602 377.5049 L1249.3086 377.5049 1242.9414 371.1396 1242.9414 363.2861 c1242.9414 362.9326 1243.0186 362.6045 1243.0459 362.2598 C1243.0459 195.085 L1259.1309 191.1914 1275.8105 188.8203 1292.9258 188.1318 C1293.0615 363.1963 L1293.0615 363.2275 1293.0723 363.2559 1293.0723 363.2861 c1293.0723 363.3154 1293.0615 363.3428 1293.0615 363.3721 C1293.0615 363.46 LBb1 (Unnamed gradient 2) 1089.918 206.1445 21.0375 704.5887 1 0 0 1 0 0 Bg657.6249 252.9325 81.7992 -212.6779 1048.7813 313.0996 Xm8333.3369 3205.1277 81.7992 -212.6779 -7284.5557 -2892.0283 Bc657.6249 252.9325 81.7992 -212.6779 1048.7813 313.0996 Bm8333.3369 3205.1277 81.7992 -212.6779 1706.4063 566.0322 Bcf0 BB*U*u0 g1648.1035 -45.25 m1640.8564 -45.1191 1633.166 -40.9053 1627.8623 -35.4512 C1621.0586 -35.4512 L1621.0586 -104.2109 L1656.168 -119.3779 1694.8711 -127.7959 1735.5479 -127.7959 c1766.2988 -127.7959 1795.917 -122.9775 1823.7139 -114.083 C1823.7139 -45.25 L1648.1035 -45.25 Lf0 g1649.2236 -33.833 m1808.8027 -33.833 L1809.7031 -33.1553 L1809.7031 15.5391 L1636.4814 -26.0771 L1639.0068 -30.7637 1643.8877 -33.7373 1649.2236 -33.833 Cf0 g1648.9902 2.53223 m1635.0586 -1.80078 1634.252 -12.5752 1634.75 -17.7363 C1635.2256 -18.0303 L1787.1904 18.6016 L1787.1904 39.374 L1648.9902 2.53223 Lf1646.7168 12.2988 m1646.8555 12.3428 L1646.8555 12.3389 L1647.0879 12.4072 L1791.4043 50.7686 L1789.6982 57.1846 L1645.334 18.8145 L1645.0586 18.7324 L1644.7676 18.6494 L1633.1621 15.0742 1626.0117 7.75684 1622.6074 -0.318359 C1628.7168 -2.91992 L1631.4805 3.4707 1636.8057 9.18066 1646.7168 12.2988 CBb1 (Unnamed gradient 2) 1644.0645 -130.5801 43.5419 289.41 1 0 0 1 0 0 Bg209.7849 199.3702 157.6793 -165.9161 1564.7813 -47.1553 Xm6908.436 6565.4697 157.6793 -165.9161 -5343.6548 -6612.625 Bc209.7849 199.3702 157.6793 -165.9161 1564.7813 -47.1553 Bm6908.436 6565.4697 157.6793 -165.9161 1774.5664 152.2148 Bcf0 BB*U*u0 g1329.1172 -25.8652 m1328.8545 -5.19727 1312.9316 11.6768 1292.6611 13.4521 c1291.7773 13.5576 1290.8867 13.6299 1289.9746 13.6299 C1289.1602 13.6299 L1289.1533 13.6299 1289.1436 13.6299 1289.1348 13.6299 c1289.125 13.6299 1289.1133 13.6299 1289.1064 13.6299 C1193.0537 13.6299 L1180.7285 13.6299 1170.7344 3.63672 1170.7344 -8.68848 C1170.7344 -65.0361 L1215.5361 -97.7695 1270.1045 -117.916 1329.2568 -120.2881 C1329.2568 -57.2314 L1329.2568 -38.6309 1329.2568 -25.8652 Y1329.1172 -25.8652 Lf1134.9395 -29.0381 m1134.9395 -34.1143 L1142.3438 -41.6504 1150.1543 -48.7803 1158.3438 -55.4697 C1158.3438 -8.68848 L1158.3438 -8.02246 1158.4063 -7.37402 1158.4443 -6.71777 C1157.2588 -6.71777 L1144.9316 -6.71777 1134.9395 -16.7109 1134.9395 -29.0381 CBb1 (Unnamed gradient 2) 1157.8262 -89.4111 19.5884 350.5906 1 0 0 1 0 0 Bg330.3003 117.5393 60.3348 -169.5485 1127.1836 -3.30176 Xm8525.1494 3033.7246 60.3348 -169.5485 -7397.9658 -3037.0264 Bc330.3003 117.5393 60.3348 -169.5485 1127.1836 -3.30176 Bm8525.1494 3033.7246 60.3348 -169.5485 1457.4834 114.2373 Bcf0 BB*U*u0 g1058.4727 -83.7402 m1005.2451 -45.7217 L1005.1855 -45.7842 L1003.0059 -43.7451 1000.0977 -42.4717 996.8799 -42.4717 c992.8887 -42.4717 989.3809 -44.4189 987.1543 -47.3809 C975.0273 -60.6484 962.7129 -71.7295 950.499 -80.9756 C980.1631 -94.6133 1013.166 -102.2266 1047.9492 -102.2266 c1052.4189 -102.2266 1056.8564 -102.0908 1061.2656 -101.8408 C1063.0654 -99.7305 1064.1709 -97.0166 1064.1709 -94.0234 c1064.1709 -89.6826 1061.8848 -85.8984 1058.4727 -83.7402 Cf978.8271 -41.958 m983.3672 -36.1982 989.1094 -30.8193 996.877 -30.9502 c1002.6963 -31.0459 1006.2354 -34.4023 1010.5996 -38.293 C1009.9111 -37.6621 L1031.5186 -53.0967 L1040.168 -44.9453 1049.5605 -36.1484 1054.4678 -30.1514 C1054.4014 -30.0928 L1056.1826 -27.9746 1057.2969 -25.2754 1057.2969 -22.291 c1057.2969 -18.3848 1055.4268 -14.9502 1052.5732 -12.7178 C1052.6104 -12.6367 L985.7197 33.0098 L985.6572 32.9277 L983.4893 34.8984 980.6357 36.1338 977.4756 36.1338 c972.4189 36.1338 968.083 33.0537 966.2334 28.666 C966.2275 28.668 966.2197 28.6738 966.2119 28.6777 C952.2656 -8.26074 932.5322 -36.2012 910.6387 -57.6094 C920.2813 -64.627 930.4746 -70.9355 941.1543 -76.4346 C953.7598 -66.8613 966.4297 -55.4668 978.8271 -41.958 CBb1 (Unnamed gradient 2) 877.9863 -85.0928 20.4246 379.45 1 0 0 1 0 0 Bg355.5948 132.4184 57.3388 -153.9771 849.1436 -7.6377 Xm8177.2246 3045.0796 57.3388 -153.9771 -7328.0811 -3052.7168 Bc355.5948 132.4184 57.3388 -153.9771 849.1436 -7.6377 Bm8177.2246 3045.0796 57.3388 -153.9771 1204.7383 124.7803 Bcf0 BB*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF